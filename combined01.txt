LISTA DE ARCHIVOS PROCESADOS:
C:\parking-app\eslint.config.js
C:\parking-app\package-lock.json
C:\parking-app\package.json
C:\parking-app\vercel.json
C:\parking-app\vite.config.js
C:\parking-app\public\manifest.json
C:\parking-app\public\service-worker.js
C:\parking-app\src\App.jsx
C:\parking-app\src\GestionUsuarios.jsx
C:\parking-app\src\main.jsx
C:\parking-app\src\supabaseClient.js
C:\parking-app\src\components\AcercaDe.jsx
C:\parking-app\src\components\Auth.jsx
C:\parking-app\src\components\CapturaCamara.jsx
C:\parking-app\src\components\Consultas.jsx
C:\parking-app\src\components\DescargoGestion.jsx
C:\parking-app\src\components\Emoji.jsx
C:\parking-app\src\components\GestionCopropietarios.jsx
C:\parking-app\src\components\ListaRegistros.jsx
C:\parking-app\src\components\Loader.jsx
C:\parking-app\src\components\MenuDesplegable.jsx
C:\parking-app\src\components\Navbar.jsx
C:\parking-app\src\components\RegistroParqueo.jsx
C:\parking-app\src\components\ResumenRecaudo.jsx
C:\parking-app\src\components\ResumenRegistros.jsx
C:\parking-app\src\components\SelectorDeFoto.jsx
C:\parking-app\src\hooks\useOnlineStatus.jsx
C:\parking-app\src\styles\global.css

============================================================



----- C:\parking-app\eslint.config.js -----

// eslint.config.js
export default [
  {
    files: ['**/*.{js,jsx,ts,tsx}'],
    plugins: {
      react: require('eslint-plugin-react'),
    },
    languageOptions: {
      ecmaVersion: 2021,
      sourceType: 'module',
      globals: { React: 'writable' },
    },
    rules: {
      'react/jsx-uses-react': 'error',
      'react/jsx-uses-vars': 'error',
      'react/react-in-jsx-scope': 'off',
      'react/prop-types': 'off',
      'no-unused-vars': 'warn',
      'no-undef': 'error',
      'semi': ['error', 'always'],
      'quotes': ['error', 'single'],
    },
  },
];


----- C:\parking-app\package-lock.json -----

{
  "name": "parqueadero-app",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "parqueadero-app",
      "version": "1.0.0",
      "dependencies": {
        "@supabase/supabase-js": "^2.39.7",
        "dayjs": "^1.11.10",
        "react": "^18.2.0",
        "react-datepicker": "^4.24.0",
        "react-dom": "^18.2.0",
        "react-hook-form": "^7.49.2",
        "react-media-recorder": "^1.6.3",
        "scoop": "^0.0.2"
      },
      "devDependencies": {
        "@vitejs/plugin-react": "^4.2.1",
        "eslint": "^8.56.0",
        "eslint-plugin-react": "^7.33.2",
        "vite": "^6.3.5"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.26.2",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.26.2.tgz",
      "integrity": "sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.25.9",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.26.8",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.8.tgz",
      "integrity": "sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.26.10",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.26.10.tgz",
      "integrity": "sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.26.2",
        "@babel/generator": "^7.26.10",
        "@babel/helper-compilation-targets": "^7.26.5",
        "@babel/helper-module-transforms": "^7.26.0",
        "@babel/helpers": "^7.26.10",
        "@babel/parser": "^7.26.10",
        "@babel/template": "^7.26.9",
        "@babel/traverse": "^7.26.10",
        "@babel/types": "^7.26.10",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.27.0.tgz",
      "integrity": "sha512-VybsKvpiN1gU1sdMZIp7FcqphVVKEwcuj02x73uvcHE0PTihx1nlBcowYWhDwjpoAXRv43+gDzyggGnn1XZhVw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.27.0",
        "@babel/types": "^7.27.0",
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.0.tgz",
      "integrity": "sha512-LVk7fbXml0H2xH34dFzKQ7TDZ2G4/rVTOrq9V+icbbadjbVxxeFeDsNHv2SrZeWoA+6ZiTyWYWtScEIW07EAcA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.26.8",
        "@babel/helper-validator-option": "^7.25.9",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz",
      "integrity": "sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.25.9",
        "@babel/types": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz",
      "integrity": "sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9",
        "@babel/traverse": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.26.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz",
      "integrity": "sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
      "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
      "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz",
      "integrity": "sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.0.tgz",
      "integrity": "sha512-U5eyP/CTFPuNE3qk+WZMxFkp/4zUzdceQlfzf7DdGdhp+Fezd7HD+i8Y24ZuTMKX3wQBld449jijbGq6OdGNQg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.0",
        "@babel/types": "^7.27.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.27.0.tgz",
      "integrity": "sha512-iaepho73/2Pz7w2eMS0Q5f83+0RKI7i4xmiYeBmDzfRVbQtTOG7Ts0S4HzJVsTMGI9keU8rNfuZr8DKfSt7Yyg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.27.0"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-self": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.25.9.tgz",
      "integrity": "sha512-y8quW6p0WHkEhmErnfe58r7x0A70uKphQm8Sp8cV7tjNQwK56sNVK0M73LK3WuYmsuyrftut4xAkjjgU0twaMg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-source": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.25.9.tgz",
      "integrity": "sha512-+iqjT8xmXhhYv4/uiYd8FNQsraMFZIfxVSqxxVSZP0WbbSAWvBXAul0m/zu+7Vv4O/3WtApy9pmaTMiumEZgfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.0.tgz",
      "integrity": "sha512-VtPOkrdPHZsKc/clNqyi9WUA8TINkZ4cGk63UUE3u4pmB2k+ZMQRDuIOagv8UVd6j7k0T3+RRIb7beKTebNbcw==",
      "license": "MIT",
      "dependencies": {
        "regenerator-runtime": "^0.14.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.0.tgz",
      "integrity": "sha512-2ncevenBqXI6qRMukPlXwHKHchC7RyMuu4xv5JBXRfOGVcTy1mXCD12qrp7Jsoxll1EV3+9sE4GugBVRjT2jFA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/parser": "^7.27.0",
        "@babel/types": "^7.27.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.27.0.tgz",
      "integrity": "sha512-19lYZFzYVQkkHkl4Cy4WrAVcqBkgvV2YM2TU3xG6DIwO7O3ecbDPfW3yM3bjAGcqcQHi+CCtjMR3dIEHxsd6bA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/generator": "^7.27.0",
        "@babel/parser": "^7.27.0",
        "@babel/template": "^7.27.0",
        "@babel/types": "^7.27.0",
        "debug": "^4.3.1",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse/node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.27.0.tgz",
      "integrity": "sha512-H45s8fVLYjbhFH62dIJ3WtmJ6RSPt/3DRO0ZcT2SUiYiQyz3BLVb9ADEnLl91m74aQPS3AzzeajZHYOalWe3bg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.4.tgz",
      "integrity": "sha512-1VCICWypeQKhVbE9oW/sJaAmjLxhVqacdkvPLEjwlttjfwENRSClS8EjBz0KzRyFSCPDIkuXW34Je/vk7zdB7Q==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.4.tgz",
      "integrity": "sha512-QNdQEps7DfFwE3hXiU4BZeOV68HHzYwGd0Nthhd3uCkkEKK7/R6MTgM0P7H7FAs5pU/DIWsviMmEGxEoxIZ+ZQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.4.tgz",
      "integrity": "sha512-bBy69pgfhMGtCnwpC/x5QhfxAz/cBgQ9enbtwjf6V9lnPI/hMyT9iWpR1arm0l3kttTr4L0KSLpKmLp/ilKS9A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.4.tgz",
      "integrity": "sha512-TVhdVtQIFuVpIIR282btcGC2oGQoSfZfmBdTip2anCaVYcqWlZXGcdcKIUklfX2wj0JklNYgz39OBqh2cqXvcQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.4.tgz",
      "integrity": "sha512-Y1giCfM4nlHDWEfSckMzeWNdQS31BQGs9/rouw6Ub91tkK79aIMTH3q9xHvzH8d0wDru5Ci0kWB8b3up/nl16g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.4.tgz",
      "integrity": "sha512-CJsry8ZGM5VFVeyUYB3cdKpd/H69PYez4eJh1W/t38vzutdjEjtP7hB6eLKBoOdxcAlCtEYHzQ/PJ/oU9I4u0A==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.4.tgz",
      "integrity": "sha512-yYq+39NlTRzU2XmoPW4l5Ifpl9fqSk0nAJYM/V/WUGPEFfek1epLHJIkTQM6bBs1swApjO5nWgvr843g6TjxuQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.4.tgz",
      "integrity": "sha512-0FgvOJ6UUMflsHSPLzdfDnnBBVoCDtBTVyn/MrWloUNvq/5SFmh13l3dvgRPkDihRxb77Y17MbqbCAa2strMQQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.4.tgz",
      "integrity": "sha512-kro4c0P85GMfFYqW4TWOpvmF8rFShbWGnrLqlzp4X1TNWjRY3JMYUfDCtOxPKOIY8B0WC8HN51hGP4I4hz4AaQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.4.tgz",
      "integrity": "sha512-+89UsQTfXdmjIvZS6nUnOOLoXnkUTB9hR5QAeLrQdzOSWZvNSAXAtcRDHWtqAUtAmv7ZM1WPOOeSxDzzzMogiQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.4.tgz",
      "integrity": "sha512-yTEjoapy8UP3rv8dB0ip3AfMpRbyhSN3+hY8mo/i4QXFeDxmiYbEKp3ZRjBKcOP862Ua4b1PDfwlvbuwY7hIGQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.4.tgz",
      "integrity": "sha512-NeqqYkrcGzFwi6CGRGNMOjWGGSYOpqwCjS9fvaUlX5s3zwOtn1qwg1s2iE2svBe4Q/YOG1q6875lcAoQK/F4VA==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.4.tgz",
      "integrity": "sha512-IcvTlF9dtLrfL/M8WgNI/qJYBENP3ekgsHbYUIzEzq5XJzzVEV/fXY9WFPfEEXmu3ck2qJP8LG/p3Q8f7Zc2Xg==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.4.tgz",
      "integrity": "sha512-HOy0aLTJTVtoTeGZh4HSXaO6M95qu4k5lJcH4gxv56iaycfz1S8GO/5Jh6X4Y1YiI0h7cRyLi+HixMR+88swag==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.4.tgz",
      "integrity": "sha512-i8JUDAufpz9jOzo4yIShCTcXzS07vEgWzyX3NH2G7LEFVgrLEhjwL3ajFE4fZI3I4ZgiM7JH3GQ7ReObROvSUA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.4.tgz",
      "integrity": "sha512-jFnu+6UbLlzIjPQpWCNh5QtrcNfMLjgIavnwPQAfoGx4q17ocOU9MsQ2QVvFxwQoWpZT8DvTLooTvmOQXkO51g==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.4.tgz",
      "integrity": "sha512-6e0cvXwzOnVWJHq+mskP8DNSrKBr1bULBvnFLpc1KY+d+irZSgZ02TGse5FsafKS5jg2e4pbvK6TPXaF/A6+CA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.4.tgz",
      "integrity": "sha512-vUnkBYxZW4hL/ie91hSqaSNjulOnYXE1VSLusnvHg2u3jewJBz3YzB9+oCw8DABeVqZGg94t9tyZFoHma8gWZQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.4.tgz",
      "integrity": "sha512-XAg8pIQn5CzhOB8odIcAm42QsOfa98SBeKUdo4xa8OvX8LbMZqEtgeWE9P/Wxt7MlG2QqvjGths+nq48TrUiKw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.4.tgz",
      "integrity": "sha512-Ct2WcFEANlFDtp1nVAXSNBPDxyU+j7+tId//iHXU2f/lN5AmO4zLyhDcpR5Cz1r08mVxzt3Jpyt4PmXQ1O6+7A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.4.tgz",
      "integrity": "sha512-xAGGhyOQ9Otm1Xu8NT1ifGLnA6M3sJxZ6ixylb+vIUVzvvd6GOALpwQrYrtlPouMqd/vSbgehz6HaVk4+7Afhw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.4.tgz",
      "integrity": "sha512-Mw+tzy4pp6wZEK0+Lwr76pWLjrtjmJyUB23tHKqEDP74R3q95luY/bXqXZeYl4NYlvwOqoRKlInQialgCKy67Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.4.tgz",
      "integrity": "sha512-AVUP428VQTSddguz9dO9ngb+E5aScyg7nOeJDrF1HPYu555gmza3bDGMPhmVXL8svDSoqPCsCPjb265yG/kLKQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.4.tgz",
      "integrity": "sha512-i1sW+1i+oWvQzSgfRcxxG2k4I9n3O9NRqy8U+uugaT2Dy7kLO9Y7wI72haOahxceMX8hZAzgGou1FhndRldxRg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.4.tgz",
      "integrity": "sha512-nOT2vZNw6hJ+z43oP1SPea/G/6AbN6X+bGNhNuq8NtRHy4wsMhw765IKLNmnjek7GvjWBYQ8Q5VBoYTFg9y1UQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.6.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.6.1.tgz",
      "integrity": "sha512-KTsJMmobmbrFLe3LDh0PC2FXpcSYJt/MLjlkh/9LEnmKYLSYmT/0EW9JWANjeoemiuZrmogti0tW5Ch+qNUYDw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz",
      "integrity": "sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^9.6.0",
        "globals": "^13.19.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/js": {
      "version": "8.57.1",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz",
      "integrity": "sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      }
    },
    "node_modules/@humanwhocodes/config-array": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz",
      "integrity": "sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==",
      "deprecated": "Use @eslint/config-array instead",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@humanwhocodes/object-schema": "^2.0.3",
        "debug": "^4.3.1",
        "minimatch": "^3.0.5"
      },
      "engines": {
        "node": ">=10.10.0"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/object-schema": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz",
      "integrity": "sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==",
      "deprecated": "Use @eslint/object-schema instead",
      "dev": true,
      "license": "BSD-3-Clause"
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.8",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
      "integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/set-array": "^1.2.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.25",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@popperjs/core": {
      "version": "2.11.8",
      "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz",
      "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/popperjs"
      }
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.40.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.40.0.tgz",
      "integrity": "sha512-lpPE1cLfP5oPzVjKMx10pgBmKELQnFJXHgvtHCtuJWOv8MxqdEIMNtgHgBFf7Ea2/7EuVwa9fodWUfXAlXZLZQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@supabase/auth-js": {
      "version": "2.69.1",
      "resolved": "https://registry.npmjs.org/@supabase/auth-js/-/auth-js-2.69.1.tgz",
      "integrity": "sha512-FILtt5WjCNzmReeRLq5wRs3iShwmnWgBvxHfqapC/VoljJl+W8hDAyFmf1NVw3zH+ZjZ05AKxiKxVeb0HNWRMQ==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/functions-js": {
      "version": "2.4.4",
      "resolved": "https://registry.npmjs.org/@supabase/functions-js/-/functions-js-2.4.4.tgz",
      "integrity": "sha512-WL2p6r4AXNGwop7iwvul2BvOtuJ1YQy8EbOd0dhG1oN1q8el/BIRSFCFnWAMM/vJJlHWLi4ad22sKbKr9mvjoA==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/node-fetch": {
      "version": "2.6.15",
      "resolved": "https://registry.npmjs.org/@supabase/node-fetch/-/node-fetch-2.6.15.tgz",
      "integrity": "sha512-1ibVeYUacxWYi9i0cf5efil6adJ9WRyZBLivgjs+AUpewx1F3xPi7gLgaASI2SmIQxPoCEjAsLAzKPgMJVgOUQ==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      }
    },
    "node_modules/@supabase/postgrest-js": {
      "version": "1.19.4",
      "resolved": "https://registry.npmjs.org/@supabase/postgrest-js/-/postgrest-js-1.19.4.tgz",
      "integrity": "sha512-O4soKqKtZIW3olqmbXXbKugUtByD2jPa8kL2m2c1oozAO11uCcGrRhkZL0kVxjBLrXHE0mdSkFsMj7jDSfyNpw==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/realtime-js": {
      "version": "2.11.2",
      "resolved": "https://registry.npmjs.org/@supabase/realtime-js/-/realtime-js-2.11.2.tgz",
      "integrity": "sha512-u/XeuL2Y0QEhXSoIPZZwR6wMXgB+RQbJzG9VErA3VghVt7uRfSVsjeqd7m5GhX3JR6dM/WRmLbVR8URpDWG4+w==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14",
        "@types/phoenix": "^1.5.4",
        "@types/ws": "^8.5.10",
        "ws": "^8.18.0"
      }
    },
    "node_modules/@supabase/storage-js": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/@supabase/storage-js/-/storage-js-2.7.1.tgz",
      "integrity": "sha512-asYHcyDR1fKqrMpytAS1zjyEfvxuOIp1CIXX7ji4lHHcJKqyk+sLl/Vxgm4sN6u8zvuUtae9e4kDxQP2qrwWBA==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/supabase-js": {
      "version": "2.49.4",
      "resolved": "https://registry.npmjs.org/@supabase/supabase-js/-/supabase-js-2.49.4.tgz",
      "integrity": "sha512-jUF0uRUmS8BKt37t01qaZ88H9yV1mbGYnqLeuFWLcdV+x1P4fl0yP9DGtaEhFPZcwSom7u16GkLEH9QJZOqOkw==",
      "license": "MIT",
      "dependencies": {
        "@supabase/auth-js": "2.69.1",
        "@supabase/functions-js": "2.4.4",
        "@supabase/node-fetch": "2.6.15",
        "@supabase/postgrest-js": "1.19.4",
        "@supabase/realtime-js": "2.11.2",
        "@supabase/storage-js": "2.7.1"
      }
    },
    "node_modules/@types/babel__core": {
      "version": "7.20.5",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.20.7",
        "@babel/types": "^7.20.7",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "node_modules/@types/babel__generator": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz",
      "integrity": "sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__template": {
      "version": "7.4.4",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__traverse": {
      "version": "7.20.7",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.7.tgz",
      "integrity": "sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.20.7"
      }
    },
    "node_modules/@types/estree": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.7.tgz",
      "integrity": "sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/node": {
      "version": "22.14.1",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.14.1.tgz",
      "integrity": "sha512-u0HuPQwe/dHrItgHHpmw3N2fYCR6x4ivMNbPHRkBVP4CvN+kiRrKHWk3i8tXiO/joPwXLMYvF9TTF0eqgHIuOw==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.21.0"
      }
    },
    "node_modules/@types/phoenix": {
      "version": "1.6.6",
      "resolved": "https://registry.npmjs.org/@types/phoenix/-/phoenix-1.6.6.tgz",
      "integrity": "sha512-PIzZZlEppgrpoT2QgbnDU+MMzuR6BbCjllj0bM70lWoejMeNJAxCchxnv7J3XFkI8MpygtRpzXrIlmWUBclP5A==",
      "license": "MIT"
    },
    "node_modules/@types/ws": {
      "version": "8.18.1",
      "resolved": "https://registry.npmjs.org/@types/ws/-/ws-8.18.1.tgz",
      "integrity": "sha512-ThVF6DCVhA8kUGy+aazFQ4kXQ7E1Ty7A3ypFOe0IcJV8O/M511G99AW24irKrW56Wt44yG9+ij8FaqoBGkuBXg==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@ungap/structured-clone": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.3.0.tgz",
      "integrity": "sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/@vitejs/plugin-react": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.4.1.tgz",
      "integrity": "sha512-IpEm5ZmeXAP/osiBXVVP5KjFMzbWOonMs0NaQQl+xYnUAcq4oHUBsF2+p4MgKWG4YMmFYJU8A6sxRPuowllm6w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/core": "^7.26.10",
        "@babel/plugin-transform-react-jsx-self": "^7.25.9",
        "@babel/plugin-transform-react-jsx-source": "^7.25.9",
        "@types/babel__core": "^7.20.5",
        "react-refresh": "^0.17.0"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "peerDependencies": {
        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0"
      }
    },
    "node_modules/acorn": {
      "version": "8.14.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.14.1.tgz",
      "integrity": "sha512-OvQ/2pUDKmgfCg++xsTX1wGxfTaszcHVcTctW4UJB4hibJx2HXxxO5UmVgyjMa+ZDsiaf5wWLXYpRWMmBI0QHg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true,
      "license": "Python-2.0"
    },
    "node_modules/array-buffer-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
      "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "is-array-buffer": "^3.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array-includes": {
      "version": "3.1.8",
      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.8.tgz",
      "integrity": "sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "is-string": "^1.0.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.findlast": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
      "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flat": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz",
      "integrity": "sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flatmap": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz",
      "integrity": "sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.tosorted": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
      "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.3",
        "es-errors": "^1.3.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/arraybuffer.prototype.slice": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
      "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.1",
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "is-array-buffer": "^3.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/async-function": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
      "integrity": "sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/automation-events": {
      "version": "7.1.9",
      "resolved": "https://registry.npmjs.org/automation-events/-/automation-events-7.1.9.tgz",
      "integrity": "sha512-nIcJo3WeNtB16TSIK2D5Ldy/5eErzmXSuOlK979sYtIQQT++iFfj/1PMjFH1XEvtqCO0+KNUEEIJ+O0l4BtncQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.0",
        "tslib": "^2.8.1"
      },
      "engines": {
        "node": ">=18.2.0"
      }
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/broker-factory": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/broker-factory/-/broker-factory-3.1.5.tgz",
      "integrity": "sha512-/s86CAyDE4d85Q2zvlMScbUBlIWeZ1LeCtQ9JpQlNesaJdXRZ5+dnzzEzpUQDTltCXs0SfjZ5GNRcxJPtyA6dg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.0",
        "fast-unique-numbers": "^9.0.20",
        "tslib": "^2.8.1",
        "worker-factory": "^7.0.41"
      }
    },
    "node_modules/browserslist": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.24.4.tgz",
      "integrity": "sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001688",
        "electron-to-chromium": "^1.5.73",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.1"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.0",
        "es-define-property": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001715",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001715.tgz",
      "integrity": "sha512-7ptkFGMm2OAOgvZpwgA4yjQ5SQbrNVGdRjzH0pBdy1Fasvcr+KAeECmbCAECzTuDuoX0FCY8KzUxjf9+9kfZEw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/classnames": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.5.1.tgz",
      "integrity": "sha512-saHYOzhIQs6wy2sVxTM6bUDsQO4F50V9RQ22qBpEdCW+I+/Wmke2HOl6lS6dTpdxVhb88/I6+Hs+438c3lfUow==",
      "license": "MIT"
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/compilerr": {
      "version": "10.0.2",
      "resolved": "https://registry.npmjs.org/compilerr/-/compilerr-10.0.2.tgz",
      "integrity": "sha512-CFwUXxJ9OuWsSvnLSbefxi+GLsZ0YnuJh40ry5QdmZ1FWK59OG+QB8XSj6t7Kq+/c5DSS7en+cML6GlzHKH58A==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.21.0",
        "dashify": "^2.0.0",
        "indefinite-article": "0.0.2",
        "tslib": "^2.5.0"
      },
      "engines": {
        "node": ">=14.15.4"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/dashify": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/dashify/-/dashify-2.0.0.tgz",
      "integrity": "sha512-hpA5C/YrPjucXypHPPc0oJ1l9Hf6wWbiOL7Ik42cxnsUOhWiCB/fylKbKqqJalW9FgkNQCw16YO8uW9Hs0Iy1A==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/data-view-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
      "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/data-view-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
      "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/inspect-js"
      }
    },
    "node_modules/data-view-byte-offset": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
      "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/date-fns": {
      "version": "2.30.0",
      "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-2.30.0.tgz",
      "integrity": "sha512-fnULvOpxnC5/Vg3NCiWelDsLiUc9bRwAPs/+LfTLNvetFCtCTN+yQz15C/fs4AwX1R9K5GLtLfn8QW+dWisaAw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.21.0"
      },
      "engines": {
        "node": ">=0.11"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/date-fns"
      }
    },
    "node_modules/dayjs": {
      "version": "1.11.13",
      "resolved": "https://registry.npmjs.org/dayjs/-/dayjs-1.11.13.tgz",
      "integrity": "sha512-oaMBel6gjolK862uaPQOVTA7q3TZhuSvuMQAAglQDOWYO9A91IrAOUJEyKVlqJlHE0vq5p5UXxzdPfMH/x6xNg==",
      "license": "MIT"
    },
    "node_modules/debug": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.0.tgz",
      "integrity": "sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-properties": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.0.1",
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/doctrine": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.140",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.140.tgz",
      "integrity": "sha512-o82Rj+ONp4Ip7Cl1r7lrqx/pXhbp/lh9DpKcMNscFJdh8ebyRofnc7Sh01B4jx403RI0oqTBvlZ7OBIZLMr2+Q==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/es-abstract": {
      "version": "1.23.9",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.9.tgz",
      "integrity": "sha512-py07lI0wjxAC/DcfK1S6G7iANonniZwTISvdPzk9hzeH0IZIshbuuFxLIU96OyF89Yb9hiqWn8M/bY83KY5vzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.2",
        "arraybuffer.prototype.slice": "^1.0.4",
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "data-view-buffer": "^1.0.2",
        "data-view-byte-length": "^1.0.2",
        "data-view-byte-offset": "^1.0.1",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-set-tostringtag": "^2.1.0",
        "es-to-primitive": "^1.3.0",
        "function.prototype.name": "^1.1.8",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.0",
        "get-symbol-description": "^1.1.0",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "internal-slot": "^1.1.0",
        "is-array-buffer": "^3.0.5",
        "is-callable": "^1.2.7",
        "is-data-view": "^1.0.2",
        "is-regex": "^1.2.1",
        "is-shared-array-buffer": "^1.0.4",
        "is-string": "^1.1.1",
        "is-typed-array": "^1.1.15",
        "is-weakref": "^1.1.0",
        "math-intrinsics": "^1.1.0",
        "object-inspect": "^1.13.3",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.7",
        "own-keys": "^1.0.1",
        "regexp.prototype.flags": "^1.5.3",
        "safe-array-concat": "^1.1.3",
        "safe-push-apply": "^1.0.0",
        "safe-regex-test": "^1.1.0",
        "set-proto": "^1.0.0",
        "string.prototype.trim": "^1.2.10",
        "string.prototype.trimend": "^1.0.9",
        "string.prototype.trimstart": "^1.0.8",
        "typed-array-buffer": "^1.0.3",
        "typed-array-byte-length": "^1.0.3",
        "typed-array-byte-offset": "^1.0.4",
        "typed-array-length": "^1.0.7",
        "unbox-primitive": "^1.1.0",
        "which-typed-array": "^1.1.18"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-iterator-helpers": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz",
      "integrity": "sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-set-tostringtag": "^2.0.3",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.6",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "iterator.prototype": "^1.1.4",
        "safe-array-concat": "^1.1.3"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-shim-unscopables": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz",
      "integrity": "sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-to-primitive": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
      "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7",
        "is-date-object": "^1.0.5",
        "is-symbol": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/esbuild": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.4.tgz",
      "integrity": "sha512-8pgjLUcUjcgDg+2Q4NYXnPbo/vncAY4UmyaCm0jZevERqCHZIaWwdJHkf8XQtu4AxSKCdvrUbT0XUr1IdZzI8Q==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.25.4",
        "@esbuild/android-arm": "0.25.4",
        "@esbuild/android-arm64": "0.25.4",
        "@esbuild/android-x64": "0.25.4",
        "@esbuild/darwin-arm64": "0.25.4",
        "@esbuild/darwin-x64": "0.25.4",
        "@esbuild/freebsd-arm64": "0.25.4",
        "@esbuild/freebsd-x64": "0.25.4",
        "@esbuild/linux-arm": "0.25.4",
        "@esbuild/linux-arm64": "0.25.4",
        "@esbuild/linux-ia32": "0.25.4",
        "@esbuild/linux-loong64": "0.25.4",
        "@esbuild/linux-mips64el": "0.25.4",
        "@esbuild/linux-ppc64": "0.25.4",
        "@esbuild/linux-riscv64": "0.25.4",
        "@esbuild/linux-s390x": "0.25.4",
        "@esbuild/linux-x64": "0.25.4",
        "@esbuild/netbsd-arm64": "0.25.4",
        "@esbuild/netbsd-x64": "0.25.4",
        "@esbuild/openbsd-arm64": "0.25.4",
        "@esbuild/openbsd-x64": "0.25.4",
        "@esbuild/sunos-x64": "0.25.4",
        "@esbuild/win32-arm64": "0.25.4",
        "@esbuild/win32-ia32": "0.25.4",
        "@esbuild/win32-x64": "0.25.4"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "8.57.1",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz",
      "integrity": "sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==",
      "deprecated": "This version is no longer supported. Please see https://eslint.org/version-support for other options.",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.6.1",
        "@eslint/eslintrc": "^2.1.4",
        "@eslint/js": "8.57.1",
        "@humanwhocodes/config-array": "^0.13.0",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@nodelib/fs.walk": "^1.2.8",
        "@ungap/structured-clone": "^1.2.0",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.2",
        "debug": "^4.3.2",
        "doctrine": "^3.0.0",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^7.2.2",
        "eslint-visitor-keys": "^3.4.3",
        "espree": "^9.6.1",
        "esquery": "^1.4.2",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^6.0.1",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "globals": "^13.19.0",
        "graphemer": "^1.4.0",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "is-path-inside": "^3.0.3",
        "js-yaml": "^4.1.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "levn": "^0.4.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3",
        "strip-ansi": "^6.0.1",
        "text-table": "^0.2.0"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-plugin-react": {
      "version": "7.37.5",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.5.tgz",
      "integrity": "sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.8",
        "array.prototype.findlast": "^1.2.5",
        "array.prototype.flatmap": "^1.3.3",
        "array.prototype.tosorted": "^1.1.4",
        "doctrine": "^2.1.0",
        "es-iterator-helpers": "^1.2.1",
        "estraverse": "^5.3.0",
        "hasown": "^2.0.2",
        "jsx-ast-utils": "^2.4.1 || ^3.0.0",
        "minimatch": "^3.1.2",
        "object.entries": "^1.1.9",
        "object.fromentries": "^2.0.8",
        "object.values": "^1.2.1",
        "prop-types": "^15.8.1",
        "resolve": "^2.0.0-next.5",
        "semver": "^6.3.1",
        "string.prototype.matchall": "^4.0.12",
        "string.prototype.repeat": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/doctrine": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/eslint-scope": {
      "version": "7.2.2",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz",
      "integrity": "sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/espree": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/espree/-/espree-9.6.1.tgz",
      "integrity": "sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "acorn": "^8.9.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^3.4.1"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/extendable-media-recorder": {
      "version": "6.6.10",
      "resolved": "https://registry.npmjs.org/extendable-media-recorder/-/extendable-media-recorder-6.6.10.tgz",
      "integrity": "sha512-gnSmLqDFq40ZdbGfuarnMLNqYPLCPpPr0p21V+g67wG4Pv2oCc/ga8sfsZrEM5GywEi7FcpyRm3z99JWZ/0aPw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.18.9",
        "media-encoder-host": "^8.0.76",
        "multi-buffer-data-view": "^3.0.20",
        "recorder-audio-worklet": "^5.1.26",
        "standardized-audio-context": "^25.3.29",
        "subscribable-things": "^2.1.6",
        "tslib": "^2.4.0"
      }
    },
    "node_modules/extendable-media-recorder-wav-encoder": {
      "version": "7.0.127",
      "resolved": "https://registry.npmjs.org/extendable-media-recorder-wav-encoder/-/extendable-media-recorder-wav-encoder-7.0.127.tgz",
      "integrity": "sha512-cEhbFk/9S72eGxF+lZXlISNwSANW2pLmnEIAp5felEzRnQ3VjOyQBPtjD8rKZRHuCOaIMn9FUnT1cMEwAWEiuw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.0",
        "extendable-media-recorder-wav-encoder-broker": "^7.0.117",
        "extendable-media-recorder-wav-encoder-worker": "^8.0.114",
        "tslib": "^2.8.1"
      }
    },
    "node_modules/extendable-media-recorder-wav-encoder-broker": {
      "version": "7.0.117",
      "resolved": "https://registry.npmjs.org/extendable-media-recorder-wav-encoder-broker/-/extendable-media-recorder-wav-encoder-broker-7.0.117.tgz",
      "integrity": "sha512-MAkd+eZ/M5szsb4hFSgD81ZfS88LxbBOzzxK9Lnz1DwLlvsf3kyxJDOegp97Dl3dozkUBKG5DjLH3F3CUJZbbQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.0",
        "broker-factory": "^3.1.5",
        "extendable-media-recorder-wav-encoder-worker": "^8.0.114",
        "tslib": "^2.8.1"
      }
    },
    "node_modules/extendable-media-recorder-wav-encoder-worker": {
      "version": "8.0.114",
      "resolved": "https://registry.npmjs.org/extendable-media-recorder-wav-encoder-worker/-/extendable-media-recorder-wav-encoder-worker-8.0.114.tgz",
      "integrity": "sha512-LVAvpxJQFmhQbQPX1D7xyv/VjP9gOXBgbvzoEY7WdUEe+HJfSo6xfJH5nL4JuJ347Zgvwv/d2zxKEq1Ibd/MMw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.0",
        "tslib": "^2.8.1",
        "worker-factory": "^7.0.41"
      }
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-unique-numbers": {
      "version": "9.0.20",
      "resolved": "https://registry.npmjs.org/fast-unique-numbers/-/fast-unique-numbers-9.0.20.tgz",
      "integrity": "sha512-2ym6CEsBN3CDEYBn2QgIfj6zCtOghEHcNU7wjq69W/y3TGr0m5XDZbVJ72CluwqnGwQBI8RZxDuTAjg1Ttphvw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.0",
        "tslib": "^2.8.1"
      },
      "engines": {
        "node": ">=18.2.0"
      }
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fdir": {
      "version": "6.4.4",
      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.4.tgz",
      "integrity": "sha512-1NZP+GK4GfuAv3PqKvxQRDMjdSRZjnkq7KfhlNrCNNlZ0ygQFpebfrnfnq/W7fpUnAv9aGWmY1zKx7FYL3gwhg==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "picomatch": "^3 || ^4"
      },
      "peerDependenciesMeta": {
        "picomatch": {
          "optional": true
        }
      }
    },
    "node_modules/file-entry-cache": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
      "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flat-cache": "^3.0.4"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/flat-cache": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
      "integrity": "sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.3",
        "rimraf": "^3.0.2"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/for-each": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
      "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/function.prototype.name": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "functions-have-names": "^1.2.3",
        "hasown": "^2.0.2",
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/get-symbol-description": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
      "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/globals": {
      "version": "13.24.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
      "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "type-fest": "^0.20.2"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globalthis": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.2.1",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graphemer": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/has-bigints": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
      "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-proto": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
      "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/indefinite-article": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/indefinite-article/-/indefinite-article-0.0.2.tgz",
      "integrity": "sha512-Au/2XzRkvxq2J6w5uvSSbBKPZ5kzINx5F2wb0SF8xpRL8BP9Lav81TnRbfPp6p+SYjYxwaaLn4EUwI3/MmYKSw==",
      "license": "MIT"
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/internal-slot": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
      "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "hasown": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/is-array-buffer": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
      "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-async-function": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz",
      "integrity": "sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "async-function": "^1.0.0",
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.1",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bigint": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
      "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-bigints": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-boolean-object": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz",
      "integrity": "sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-data-view": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
      "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
      "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-finalizationregistry": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
      "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-generator-function": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.0",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-map": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-number-object": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
      "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-regex": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-set": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-shared-array-buffer": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
      "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-string": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
      "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-symbol": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
      "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-symbols": "^1.1.0",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakmap": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz",
      "integrity": "sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakset": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
      "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/iterator.prototype": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz",
      "integrity": "sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "get-proto": "^1.0.0",
        "has-symbols": "^1.1.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/jsx-ast-utils": {
      "version": "3.3.5",
      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
      "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.6",
        "array.prototype.flat": "^1.3.1",
        "object.assign": "^4.1.4",
        "object.values": "^1.1.6"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "license": "MIT",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/media-encoder-host": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/media-encoder-host/-/media-encoder-host-8.1.0.tgz",
      "integrity": "sha512-VwX3ex48ltl+K1ObGEq3IcZp/XqpNTWemd9brC9ovo89rYmCRKTZAp1FCyfAY86RdvSMrUs26lbo45DIDVyERg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.24.4",
        "media-encoder-host-broker": "^7.1.0",
        "media-encoder-host-worker": "^9.2.0",
        "tslib": "^2.6.2"
      }
    },
    "node_modules/media-encoder-host-broker": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/media-encoder-host-broker/-/media-encoder-host-broker-7.1.0.tgz",
      "integrity": "sha512-Emu3f45Wbf6AoRJxfvZ8e5nh8fRVviBfkABgYNvVUsVBgJ7+l137gn324g/JmNVQhhVQ89fjmGT1kHIJ9JG5Nw==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.24.4",
        "broker-factory": "^3.0.97",
        "fast-unique-numbers": "^9.0.4",
        "media-encoder-host-worker": "^9.2.0",
        "tslib": "^2.6.2"
      }
    },
    "node_modules/media-encoder-host-worker": {
      "version": "9.2.0",
      "resolved": "https://registry.npmjs.org/media-encoder-host-worker/-/media-encoder-host-worker-9.2.0.tgz",
      "integrity": "sha512-LrJJgNBDZH2y1PYBLaiYQw9uFU5i3yPvDkDxdko+L3Z4qzhKq9+4eYxKDqlwO4EdOlaiggvMpkgZl3roOniz2A==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.24.4",
        "extendable-media-recorder-wav-encoder-broker": "^7.0.100",
        "tslib": "^2.6.2",
        "worker-factory": "^7.0.24"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/multi-buffer-data-view": {
      "version": "3.0.24",
      "resolved": "https://registry.npmjs.org/multi-buffer-data-view/-/multi-buffer-data-view-3.0.24.tgz",
      "integrity": "sha512-jm7Ycplx37ExXyQmqhwl7zfQmAj81y5LLzVx0XyWea4omP9W/xJhLEHs/5b+WojGyYSRt8BHiXZVcYzu68Ma0Q==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.20.6",
        "tslib": "^2.4.1"
      },
      "engines": {
        "node": ">=12.20.1"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
      "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0",
        "has-symbols": "^1.1.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.entries": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.9.tgz",
      "integrity": "sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.fromentries": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.values": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz",
      "integrity": "sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/own-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
      "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "get-intrinsic": "^1.2.6",
        "object-keys": "^1.1.1",
        "safe-push-apply": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgz",
      "integrity": "sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/possible-typed-array-names": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
      "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.3",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.3.tgz",
      "integrity": "sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.8",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/react": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-datepicker": {
      "version": "4.25.0",
      "resolved": "https://registry.npmjs.org/react-datepicker/-/react-datepicker-4.25.0.tgz",
      "integrity": "sha512-zB7CSi44SJ0sqo8hUQ3BF1saE/knn7u25qEMTO1CQGofY1VAKahO8k9drZtp0cfW1DMfoYLR3uSY1/uMvbEzbg==",
      "license": "MIT",
      "dependencies": {
        "@popperjs/core": "^2.11.8",
        "classnames": "^2.2.6",
        "date-fns": "^2.30.0",
        "prop-types": "^15.7.2",
        "react-onclickoutside": "^6.13.0",
        "react-popper": "^2.3.0"
      },
      "peerDependencies": {
        "react": "^16.9.0 || ^17 || ^18",
        "react-dom": "^16.9.0 || ^17 || ^18"
      }
    },
    "node_modules/react-dom": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.2"
      },
      "peerDependencies": {
        "react": "^18.3.1"
      }
    },
    "node_modules/react-fast-compare": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/react-fast-compare/-/react-fast-compare-3.2.2.tgz",
      "integrity": "sha512-nsO+KSNgo1SbJqJEYRE9ERzo7YtYbou/OqjSQKxV7jcKox7+usiUVZOAC+XnDOABXggQTno0Y1CpVnuWEc1boQ==",
      "license": "MIT"
    },
    "node_modules/react-hook-form": {
      "version": "7.56.1",
      "resolved": "https://registry.npmjs.org/react-hook-form/-/react-hook-form-7.56.1.tgz",
      "integrity": "sha512-qWAVokhSpshhcEuQDSANHx3jiAEFzu2HAaaQIzi/r9FNPm1ioAvuJSD4EuZzWd7Al7nTRKcKPnBKO7sRn+zavQ==",
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/react-hook-form"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17 || ^18 || ^19"
      }
    },
    "node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
      "license": "MIT"
    },
    "node_modules/react-media-recorder": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/react-media-recorder/-/react-media-recorder-1.7.1.tgz",
      "integrity": "sha512-OIYA4pfGR1HbRm4aB/mv2EswDSBanh+NbUyUEEeIaHVpmsF3AOr4T0te4CgIn5ijja85A/KI+JimVoiQ93dNgA==",
      "license": "MIT",
      "dependencies": {
        "extendable-media-recorder": "^6.6.5",
        "extendable-media-recorder-wav-encoder": "^7.0.68"
      }
    },
    "node_modules/react-onclickoutside": {
      "version": "6.13.2",
      "resolved": "https://registry.npmjs.org/react-onclickoutside/-/react-onclickoutside-6.13.2.tgz",
      "integrity": "sha512-h6Hbf1c8b7tIYY4u90mDdBLY4+AGQVMFtIE89HgC0DtVCh/JfKl477gYqUtGLmjZBKK3MJxomP/lFiLbz4sq9A==",
      "license": "MIT",
      "funding": {
        "type": "individual",
        "url": "https://github.com/Pomax/react-onclickoutside/blob/master/FUNDING.md"
      },
      "peerDependencies": {
        "react": "^15.5.x || ^16.x || ^17.x || ^18.x",
        "react-dom": "^15.5.x || ^16.x || ^17.x || ^18.x"
      }
    },
    "node_modules/react-popper": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/react-popper/-/react-popper-2.3.0.tgz",
      "integrity": "sha512-e1hj8lL3uM+sgSR4Lxzn5h1GxBlpa4CQz0XLF8kx4MDrDRWY0Ena4c97PUeSX9i5W3UAfDP0z0FXCTQkoXUl3Q==",
      "license": "MIT",
      "dependencies": {
        "react-fast-compare": "^3.0.1",
        "warning": "^4.0.2"
      },
      "peerDependencies": {
        "@popperjs/core": "^2.0.0",
        "react": "^16.8.0 || ^17 || ^18",
        "react-dom": "^16.8.0 || ^17 || ^18"
      }
    },
    "node_modules/react-refresh": {
      "version": "0.17.0",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz",
      "integrity": "sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/recorder-audio-worklet": {
      "version": "5.1.39",
      "resolved": "https://registry.npmjs.org/recorder-audio-worklet/-/recorder-audio-worklet-5.1.39.tgz",
      "integrity": "sha512-w/RazoBwZnkFnEPRsJYNThOHznLQC98/IzWRrutpJQVvCcL0nbLsVSLDaRrnrqVpRUI11VgiXRh30HaHiSdVhQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.21.0",
        "broker-factory": "^3.0.75",
        "fast-unique-numbers": "^7.0.2",
        "recorder-audio-worklet-processor": "^4.2.21",
        "standardized-audio-context": "^25.3.41",
        "subscribable-things": "^2.1.14",
        "tslib": "^2.5.0",
        "worker-factory": "^6.0.76"
      }
    },
    "node_modules/recorder-audio-worklet-processor": {
      "version": "4.2.21",
      "resolved": "https://registry.npmjs.org/recorder-audio-worklet-processor/-/recorder-audio-worklet-processor-4.2.21.tgz",
      "integrity": "sha512-oiiS2sp6eMxkvjt13yetSYUJvnAxBZk60mIxz0Vf/2lDWa/4svCyMLHIDzYKbHahkISd0UYyqLS9dI7xDlUOCA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.21.0",
        "tslib": "^2.5.0"
      }
    },
    "node_modules/recorder-audio-worklet/node_modules/fast-unique-numbers": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/fast-unique-numbers/-/fast-unique-numbers-7.0.2.tgz",
      "integrity": "sha512-xnqpsnu889bHbq5cbDMwCJ2BPf6kjFPMu+RHfqKvisRxeEbTOVxY5aW/ZNsZ/r8OlwatxmjdFEVQog2xAhLkvg==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.21.0",
        "tslib": "^2.5.0"
      },
      "engines": {
        "node": ">=14.15.4"
      }
    },
    "node_modules/recorder-audio-worklet/node_modules/worker-factory": {
      "version": "6.0.76",
      "resolved": "https://registry.npmjs.org/worker-factory/-/worker-factory-6.0.76.tgz",
      "integrity": "sha512-W1iBNPmE9p0asU4aFmYJYCnMxhkvk4qlKc660GlHxWgmflY64NxxTbmKqipu4K5p9LiKKPjqXfcQme6153BZEQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.21.0",
        "compilerr": "^10.0.2",
        "fast-unique-numbers": "^7.0.2",
        "tslib": "^2.5.0"
      }
    },
    "node_modules/reflect.getprototypeof": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
      "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.1",
        "which-builtin-type": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.14.1",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz",
      "integrity": "sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==",
      "license": "MIT"
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
      "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-errors": "^1.3.0",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve": {
      "version": "2.0.0-next.5",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
      "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.13.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/rollup": {
      "version": "4.40.0",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.40.0.tgz",
      "integrity": "sha512-Noe455xmA96nnqH5piFtLobsGbCij7Tu+tb3c1vYjNbTkfzGqXqQXG3wJaYXkRZuQ0vEYN4bhwg7QnIrqB5B+w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/estree": "1.0.7"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.40.0",
        "@rollup/rollup-android-arm64": "4.40.0",
        "@rollup/rollup-darwin-arm64": "4.40.0",
        "@rollup/rollup-darwin-x64": "4.40.0",
        "@rollup/rollup-freebsd-arm64": "4.40.0",
        "@rollup/rollup-freebsd-x64": "4.40.0",
        "@rollup/rollup-linux-arm-gnueabihf": "4.40.0",
        "@rollup/rollup-linux-arm-musleabihf": "4.40.0",
        "@rollup/rollup-linux-arm64-gnu": "4.40.0",
        "@rollup/rollup-linux-arm64-musl": "4.40.0",
        "@rollup/rollup-linux-loongarch64-gnu": "4.40.0",
        "@rollup/rollup-linux-powerpc64le-gnu": "4.40.0",
        "@rollup/rollup-linux-riscv64-gnu": "4.40.0",
        "@rollup/rollup-linux-riscv64-musl": "4.40.0",
        "@rollup/rollup-linux-s390x-gnu": "4.40.0",
        "@rollup/rollup-linux-x64-gnu": "4.40.0",
        "@rollup/rollup-linux-x64-musl": "4.40.0",
        "@rollup/rollup-win32-arm64-msvc": "4.40.0",
        "@rollup/rollup-win32-ia32-msvc": "4.40.0",
        "@rollup/rollup-win32-x64-msvc": "4.40.0",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/rxjs-interop": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/rxjs-interop/-/rxjs-interop-2.0.0.tgz",
      "integrity": "sha512-ASEq9atUw7lualXB+knvgtvwkCEvGWV2gDD/8qnASzBkzEARZck9JAyxmY8OS6Nc1pCPEgDTKNcx+YqqYfzArw==",
      "license": "MIT"
    },
    "node_modules/safe-array-concat": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
      "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "has-symbols": "^1.1.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">=0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-push-apply": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
      "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-regex-test": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-regex": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/scheduler": {
      "version": "0.23.2",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/scoop": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/scoop/-/scoop-0.0.2.tgz",
      "integrity": "sha512-epgEC/vmIad9sT20iSq5Lb4/OhncrlLNm2cjJzUKtCey68wYfjiNFE3bUNjAQwzragU8zyhQDaKRcQJMA/wClg=="
    },
    "node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-function-name": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "functions-have-names": "^1.2.3",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-proto": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "dev": true,
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/standardized-audio-context": {
      "version": "25.3.77",
      "resolved": "https://registry.npmjs.org/standardized-audio-context/-/standardized-audio-context-25.3.77.tgz",
      "integrity": "sha512-Ki9zNz6pKcC5Pi+QPjPyVsD9GwJIJWgryji0XL9cAJXMGyn+dPOf6Qik1AHei0+UNVcc4BOCa0hWLBzlwqsW/A==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.25.6",
        "automation-events": "^7.0.9",
        "tslib": "^2.7.0"
      }
    },
    "node_modules/string.prototype.matchall": {
      "version": "4.0.12",
      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz",
      "integrity": "sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "regexp.prototype.flags": "^1.5.3",
        "set-function-name": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.repeat": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
      "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.5"
      }
    },
    "node_modules/string.prototype.trim": {
      "version": "1.2.10",
      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
      "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-data-property": "^1.1.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-object-atoms": "^1.0.0",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimend": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
      "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimstart": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/subscribable-things": {
      "version": "2.1.51",
      "resolved": "https://registry.npmjs.org/subscribable-things/-/subscribable-things-2.1.51.tgz",
      "integrity": "sha512-d1JDHHb8mFlS8Czfpi2oRqYwna0FT1DmZlDzRzfyQPCmmurRGF+k4OetEcYWtyU+hVqbG5Dn5w1C8uUp+QLdHQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.0",
        "rxjs-interop": "^2.0.0",
        "tslib": "^2.8.1"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/text-table": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
      "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/tinyglobby": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.13.tgz",
      "integrity": "sha512-mEwzpUgrLySlveBwEVDMKk5B57bhLPYovRfPAXD5gA/98Opn0rCDj3GtLwFvCvH5RK9uPCExUROW5NjDwvqkxw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fdir": "^6.4.4",
        "picomatch": "^4.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/SuperchupuDev"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
      "dev": true,
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/typed-array-buffer": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
      "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/typed-array-byte-length": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
      "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-byte-offset": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
      "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.15",
        "reflect.getprototypeof": "^1.0.9"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-length": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
      "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "is-typed-array": "^1.1.13",
        "possible-typed-array-names": "^1.0.0",
        "reflect.getprototypeof": "^1.0.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/unbox-primitive": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
      "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.1.0",
        "which-boxed-primitive": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/undici-types": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
      "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
      "license": "MIT"
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/vite": {
      "version": "6.3.5",
      "resolved": "https://registry.npmjs.org/vite/-/vite-6.3.5.tgz",
      "integrity": "sha512-cZn6NDFE7wdTpINgs++ZJ4N49W2vRp8LCKrn3Ob1kYNtOo21vfDoaV5GzBfLU4MovSAB8uNRm4jgzVQZ+mBzPQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "esbuild": "^0.25.0",
        "fdir": "^6.4.4",
        "picomatch": "^4.0.2",
        "postcss": "^8.5.3",
        "rollup": "^4.34.9",
        "tinyglobby": "^0.2.13"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || ^20.0.0 || >=22.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
        "jiti": ">=1.21.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "sass-embedded": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.16.0",
        "tsx": "^4.8.1",
        "yaml": "^2.4.2"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "jiti": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        },
        "tsx": {
          "optional": true
        },
        "yaml": {
          "optional": true
        }
      }
    },
    "node_modules/warning": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.0.0"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-boxed-primitive": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
      "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-bigint": "^1.1.0",
        "is-boolean-object": "^1.2.1",
        "is-number-object": "^1.1.1",
        "is-string": "^1.1.1",
        "is-symbol": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-builtin-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
      "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "function.prototype.name": "^1.1.6",
        "has-tostringtag": "^1.0.2",
        "is-async-function": "^2.0.0",
        "is-date-object": "^1.1.0",
        "is-finalizationregistry": "^1.1.0",
        "is-generator-function": "^1.0.10",
        "is-regex": "^1.2.1",
        "is-weakref": "^1.0.2",
        "isarray": "^2.0.5",
        "which-boxed-primitive": "^1.1.0",
        "which-collection": "^1.0.2",
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-collection": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-map": "^2.0.3",
        "is-set": "^2.0.3",
        "is-weakmap": "^2.0.2",
        "is-weakset": "^2.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-typed-array": {
      "version": "1.1.19",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz",
      "integrity": "sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "for-each": "^0.3.5",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/worker-factory": {
      "version": "7.0.41",
      "resolved": "https://registry.npmjs.org/worker-factory/-/worker-factory-7.0.41.tgz",
      "integrity": "sha512-YZ5T7pzoazUvE+CR5bF+njKQFCLPAeN+yt5xPqUaJhUwpo/xUUSNn8QgvErZNQ79r/TuWEvFMLyl/3i40GDBHQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.27.0",
        "fast-unique-numbers": "^9.0.20",
        "tslib": "^2.8.1"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/ws": {
      "version": "8.18.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.1.tgz",
      "integrity": "sha512-RKW2aJZMXeMxVpnZ6bck+RswznaxmzdULiBr6KY7XkTnW8uvt0iT9H5DkHUChXrc+uurzwa0rVI16n/Xzjdz1w==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    }
  }
}


----- C:\parking-app\package.json -----

{
  "name": "parqueadero-app",
  "version": "1.0.0",
  "description": "Gestión de parqueaderos de visita - Conjunto Habitacional Thomas II",
  "author": "Gabriel Ortega",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview",
    "lint": "eslint . --ext .js,.jsx"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.39.7",
    "dayjs": "^1.11.10",
    "react": "^18.2.0",
    "react-datepicker": "^4.24.0",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.49.2",
    "react-media-recorder": "^1.6.3",
    "scoop": "^0.0.2"
  },
  "devDependencies": {
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.56.0",
    "eslint-plugin-react": "^7.33.2",
    "vite": "^6.3.5"
  }
}


----- C:\parking-app\vercel.json -----

{
  "version": 2,
  "builds": [
    {
      "src": "index.html",
      "use": "@vercel/static-build",
      "config": { "distDir": "dist" }
    }
  ],
  "routes": [
    { "src": "/(.*)", "dest": "/" }
  ]
}


----- C:\parking-app\vite.config.js -----

// vite.config.js
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
  server: {
    port: 5173,
    open: true
  },
  build: {
    outDir: 'dist',
    sourcemap: true
  }
})


----- C:\parking-app\public\manifest.json -----

{
  "name": "Gestión Parqueaderos",
  "short_name": "Parqueaderos",
  "start_url": ".",
  "display": "standalone",
  "background_color": "#6c63ff",
  "theme_color": "#6c63ff",
  "icons": [
    {
      "src": "/logo192.png",
      "sizes": "192x192",
      "type": "image/png"
    }
  ]
}


----- C:\parking-app\public\service-worker.js -----

const CACHE_NAME = 'parqueadero-cache-v1';
const ASSETS = [
  '/',
  '/index.html',
  '/manifest.json',
  // Agrega aquí los archivos importantes de tu app
];

// Guardar archivos al instalar
self.addEventListener('install', event => {
  event.waitUntil(
    caches.open(CACHE_NAME).then(cache => cache.addAll(ASSETS))
  );
});

// Servir archivos desde el caché cuando no hay internet
self.addEventListener('fetch', event => {
  event.respondWith(
    caches.match(event.request).then(response => response || fetch(event.request))
  );
});


----- C:\parking-app\src\App.jsx -----

// src/App.jsx
import { useState, useEffect, Suspense, lazy } from 'react'
import { supabase } from './supabaseClient'
import Auth from './components/Auth'
import RegistroParqueo from './components/RegistroParqueo'
import ResumenRegistros from './components/ResumenRegistros'
import Loader from './components/Loader'
import parqueaderoImg from './images/parqueadero.jpg'
import MenuDesplegable from './components/MenuDesplegable'
import Emoji from './components/Emoji'
import './styles/global.css'

// Lazy loading para módulos secundarios
const Consultas = lazy(() => import('./components/Consultas'))
const ResumenRecaudo = lazy(() => import('./components/ResumenRecaudo'))
const GestionCopropietarios = lazy(() => import('./components/GestionCopropietarios'))
const DescargoGestion = lazy(() => import('./components/DescargoGestion'))
const AcercaDe = lazy(() => import('./components/AcercaDe'))
const GestionUsuarios = lazy(() => import('./GestionUsuarios'))

function useOnlineStatus() {
  const [isOnline, setIsOnline] = useState(navigator.onLine)
  useEffect(() => {
    const update = () => setIsOnline(navigator.onLine)
    window.addEventListener('online', update)
    window.addEventListener('offline', update)
    return () => {
      window.removeEventListener('online', update)
      window.removeEventListener('offline', update)
    }
  }, [])
  return isOnline
}

export default function App() {
  const [session, setSession] = useState(null)
  const [usuarioApp, setUsuarioApp] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [refreshKey, setRefreshKey] = useState(0)
  const [currentView, setCurrentView] = useState('registro')
  const [registrosFiltrados, setRegistrosFiltrados] = useState([])

  // Tema (oscuro/claro)
  const getInitialTheme = () => {
    const stored = localStorage.getItem('theme')
    if (stored === 'dark' || stored === 'light') return stored
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
  }
  const [theme, setTheme] = useState(getInitialTheme)

  const isOnline = useOnlineStatus()

  useEffect(() => {
    document.documentElement.setAttribute('data-theme', theme)
    localStorage.setItem('theme', theme)
  }, [theme])

  useEffect(() => {
    let ignore = false
    const getSessionAndUsuario = async () => {
      try {
        setLoading(true)
        setError(null)
        const { data: { session }, error } = await supabase.auth.getSession()
        if (error) throw error
        setSession(session)
        if (session?.user) {
          const { data: usuario, error: userError } = await supabase
            .from('usuarios_app')
            .select('*')
            .eq('email', session.user.email)
            .single()
          if (userError) throw userError
          if (!ignore) setUsuarioApp(usuario)
        }
      } catch (error) {
        setError(error.message)
      } finally {
        setLoading(false)
      }
    }

    getSessionAndUsuario()
    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {
      setSession(session)
      getSessionAndUsuario()
    })

    return () => {
      ignore = true
      subscription?.unsubscribe()
    }
  }, [])

  if (loading) return <Loader fullScreen text="⏳ Cargando la experiencia..." />

  return (
    <div className="app-root" style={{ minHeight: '100vh', transition: 'background 0.3s' }}>
      <header className="header-gradient">
        <div className="topbar-center">
          <div
            style={{
              display: 'flex',
              alignItems: 'center',
              gap: 8,
              background: isOnline ? '#e6f9f3' : '#fff3cd',
              color: isOnline ? '#10b981' : '#856404',
              border: isOnline ? '1.5px solid #10b981' : '1.5px solid #f59e42',
              borderRadius: 8,
              padding: '3px 14px',
              fontWeight: 700,
              fontSize: '1em',
              marginRight: 18,
              minWidth: 110,
              boxShadow: isOnline ? '0 2px 6px #10b98122' : '0 2px 6px #f59e4222',
              transition: 'all 0.3s'
            }}
            aria-live="polite"
          >
            <span
              style={{
                display: 'inline-block',
                width: 12,
                height: 12,
                borderRadius: '50%',
                background: isOnline ? '#10b981' : '#f59e42',
                marginRight: 7,
                border: '2px solid #fff'
              }}
            />
            {isOnline
              ? <><Emoji symbol="🟢" label="En línea" /> <b>En línea</b> <Emoji symbol="🔗" label="Conectado" /></>
              : <><Emoji symbol="🟠" label="Sin conexión" /> <b>Sin conexión</b> <Emoji symbol="⚡" label="Desconectado" /></>}
          </div>
          <button
            className="theme-toggle"
            aria-label={`Cambiar a modo ${theme === 'dark' ? 'claro' : 'oscuro'}`}
            onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}
            title="Cambiar tema"
            type="button"
            style={{ marginLeft: 8 }}
          >
            {theme === 'dark'
              ? <><Emoji symbol="🌞" label="Modo claro" /> <span style={{ fontWeight: 600 }}>Claro</span></>
              : <><Emoji symbol="🌙" label="Modo oscuro" /> <span style={{ fontWeight: 600 }}>Oscuro</span></>}
          </button>
          <span className="barra-vertical" />
          {session && usuarioApp && (
            <>
              <span className="user-info">
                <Emoji symbol="👤" label="Usuario" /> <b>{usuarioApp.nombre}</b>
                <span className="rol-badge">({usuarioApp.rol === 'admin' ? <><Emoji symbol="👑" /> Admin</> : <><Emoji symbol="📝" /> Registrador</>})</span>
              </span>
              <span className="barra-vertical" />
              <button
                className="logout-btn"
                onClick={async () => {
                  await supabase.auth.signOut()
                  setUsuarioApp(null)
                  setSession(null)
                }}
              >
                <Emoji symbol="🚪" label="Cerrar sesión" /> Salir
              </button>
            </>
          )}
        </div>
        <div className="header-content">
          <h1 className="conjunto-title" style={{ display: 'flex', alignItems: 'center', gap: 12 }}>
            <Emoji symbol="🏢" label="Conjunto" /> <span>CONJUNTO HABITACIONAL THOMAS II</span> <Emoji symbol="⭐" label="Estrella" />
          </h1>
          <div
            className="subtitle"
            style={{
              display: 'flex',
              alignItems: 'center',
              gap: 18
            }}
          >
            <img
              src={parqueaderoImg}
              alt="Parqueadero"
              style={{
                height: 152,
                width: 'auto',
                maxWidth: '100%',
                borderRadius: 16,
                marginRight: 12,
                boxShadow: '0 2px 12px #0002',
                objectFit: 'contain'
              }}
            />
            <span>
              <Emoji symbol="🚗" label="Parqueo" /> <b>Gestión de Parqueaderos Comunales</b> <Emoji symbol="🅿️" label="Parking" />
            </span>
          </div>
        </div>
      </header>

      {/* Menú principal */}
      <MenuDesplegable
        currentView={currentView}
        setCurrentView={setCurrentView}
        usuarioApp={usuarioApp}
      />

      {error && (
        <div className="error-banner">
          <Emoji symbol="❗" label="Error" /> <b>Error:</b> {error} <Emoji symbol="😢" label="Triste" />
          <button onClick={() => setError(null)} className="close-error">
            <Emoji symbol="✖️" label="Cerrar" />
          </button>
        </div>
      )}

      <main className="main-content">
        {!session ? (
          <Auth />
        ) : (
          <>
            {currentView === 'registro' ? (
              usuarioApp && usuarioApp.id ? (
                <>
                  <RegistroParqueo
                    usuarioApp={usuarioApp}
                    onRegistroExitoso={() => setRefreshKey(prev => prev + 1)}
                  />
                  <ResumenRegistros registros={registrosFiltrados} />
                </>
              ) : (
                <Loader text="⏳ Cargando usuario..." />
              )
            ) : (
              <Suspense fallback={<Loader text="🚀 Cargando módulo..." />}>
                {currentView === 'consulta' ? (
                  <Consultas />
                ) : currentView === 'recaudo' ? (
                  <ResumenRecaudo refreshKey={refreshKey} />
                ) : currentView === 'descargo' ? (
                  <DescargoGestion />
                ) : currentView === 'acerca' ? (
                  <AcercaDe />
                ) : currentView === 'copropietarios' ? (
                  <GestionCopropietarios />
                ) : currentView === 'usuarios' && usuarioApp?.rol === 'admin' ? (
                  <GestionUsuarios usuarioActual={usuarioApp} />
                ) : null}
              </Suspense>
            )}
          </>
        )}
      </main>
      <footer className="footer" style={{
        fontSize: 16,
        padding: 18,
        background: 'linear-gradient(90deg,#6366f1 0%,#38bdf8 100%)',
        color: '#fff',
        borderTopLeftRadius: 24,
        borderTopRightRadius: 24,
        marginTop: 40,
        boxShadow: '0 -2px 12px #6366f144'
      }}>
        <Emoji symbol="💡" label="Innovación" /> {new Date().getFullYear()} &mdash; <b>CONJUNTO HABITACIONAL THOMAS II</b>
        <span style={{ marginLeft: 8 }}>
          <Emoji symbol="❤️" label="amor" /> Desarrollado con pasión y tecnología <Emoji symbol="🚀" label="Rocket" />
        </span>
      </footer>
    </div>
  )
}


----- C:\parking-app\src\GestionUsuarios.jsx -----

import { useState, useEffect } from 'react'
import { supabase } from './supabaseClient'
import Loader from "./components/Loader"
import Emoji from './components/Emoji'

export default function GestionUsuarios({ usuarioActual }) {
  const [usuarios, setUsuarios] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [modal, setModal] = useState({ open: false, usuario: null })
  const [form, setForm] = useState({ email: '', nombre: '', rol: 'registrador', activo: true })
  const [saving, setSaving] = useState(false)
  const [deleting, setDeleting] = useState(false)

  // Leer usuarios
  const fetchUsuarios = async () => {
    setLoading(true)
    const { data, error } = await supabase
      .from('usuarios_app')
      .select('id, email, nombre, rol, activo')
      .order('email', { ascending: true })
    if (error) setError(error.message)
    else setUsuarios(data)
    setLoading(false)
  }

  useEffect(() => { fetchUsuarios() }, [])

  // Abrir modal para editar
  const handleEdit = (usuario) => {
    setForm({
      email: usuario.email,
      nombre: usuario.nombre,
      rol: usuario.rol,
      activo: usuario.activo
    })
    setModal({ open: true, usuario })
  }

  // Abrir modal para crear
  const handleNew = () => {
    setForm({ email: '', nombre: '', rol: 'registrador', activo: true })
    setModal({ open: true, usuario: null })
  }

  // Guardar usuario (crear o editar)
  const handleSave = async (e) => {
    e.preventDefault()
    setSaving(true)
    setError(null)
    if (!form.email || !form.nombre || !form.rol) {
      setError('Todos los campos son obligatorios')
      setSaving(false)
      return
    }
    try {
      if (modal.usuario) {
        // Editar
        const { error } = await supabase
          .from('usuarios_app')
          .update({
            email: form.email.trim().toLowerCase(),
            nombre: form.nombre,
            rol: form.rol,
            activo: form.activo
          })
          .eq('id', modal.usuario.id)
        if (error) throw error
      } else {
        // Crear
        const { error } = await supabase
          .from('usuarios_app')
          .insert([{ ...form, email: form.email.trim().toLowerCase() }])
        if (error) throw error
      }
      setModal({ open: false, usuario: null })
      fetchUsuarios()
    } catch (err) {
      setError(err.message)
    } finally {
      setSaving(false)
    }
  }

  // Eliminar usuario
  const handleDelete = async (usuario) => {
    if (!window.confirm('¿Seguro que deseas eliminar este usuario?')) return
    setDeleting(true)
    setError(null)
    try {
      if (usuario.id === usuarioActual.id) {
        setError('No puedes eliminar tu propio usuario.')
        setDeleting(false)
        return
      }
      const { error } = await supabase
        .from('usuarios_app')
        .delete()
        .eq('id', usuario.id)
      if (error) throw error
      fetchUsuarios()
    } catch (err) {
      setError(err.message)
    } finally {
      setDeleting(false)
    }
  }

  if (loading) return <Loader text="Cargando usuarios..." />

  return (
    <div className="gestion-usuarios-container">
      <h2>
        <Emoji symbol="👥" label="Usuarios" /> Gestión de Usuarios
      </h2>
      <button className="edit-btn" onClick={handleNew} style={{ marginBottom: 18 }}>
        <Emoji symbol="➕" /> Nuevo usuario
      </button>
      <div style={{ fontSize: 13, color: '#888', marginBottom: 12 }}>
        <Emoji symbol="⚠️" /> Solo usuarios <b>administrador</b> pueden agregar, editar o eliminar usuarios.
      </div>
      <table className="resultados-table" style={{ marginTop: 0 }}>
        <thead>
          <tr>
            <th><Emoji symbol="✉️" label="Email" /> Email</th>
            <th><Emoji symbol="🧑" label="Nombre" /> Nombre</th>
            <th><Emoji symbol="🎖️" label="Rol" /> Rol</th>
            <th><Emoji symbol="✔" label="Activo" /> Activo</th>
            <th><Emoji symbol="⚙️" label="Acciones" /> Acciones</th>
          </tr>
        </thead>
        <tbody>
          {usuarios.map(u => (
            <tr key={u.id}>
              <td>{u.email}</td>
              <td>{u.nombre}</td>
              <td>
                {u.rol === 'admin' ? <><Emoji symbol="👑" /> Administrador</> : <><Emoji symbol="📋" /> Registrador</>}
              </td>
              <td>{u.activo ? <Emoji symbol="✔" /> : <Emoji symbol="❌" />}</td>
              <td>
                <button className="edit-btn" onClick={() => handleEdit(u)} title="Editar">
                  <Emoji symbol="✏️" label="Editar" />
                </button>
                <button className="delete-btn" onClick={() => handleDelete(u)} title="Eliminar" disabled={deleting || u.id === usuarioActual.id}>
                  <Emoji symbol="🗑️" label="Eliminar" />
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
      {error && <div className="error-message">{error}</div>}

      {/* Modal para crear/editar */}
      {modal.open && (
        <div className="modal-backdrop">
          <div className="modal-content">
            <h3>
              <Emoji symbol={modal.usuario ? "✏️" : "➕"} label={modal.usuario ? "Editar" : "Nuevo"} />{' '}
              {modal.usuario ? 'Editar' : 'Nuevo'} Usuario
            </h3>
            <form className="modal-form" onSubmit={handleSave}>
              <label>
                <Emoji symbol="✉️" /> Email:
                <input
                  type="email"
                  value={form.email}
                  onChange={e => setForm({ ...form, email: e.target.value })}
                  required
                  disabled={!!modal.usuario}
                />
              </label>
              <label>
                <Emoji symbol="🧑" /> Nombre:
                <input
                  type="text"
                  value={form.nombre}
                  onChange={e => setForm({ ...form, nombre: e.target.value })}
                  required
                />
              </label>
              <label>
                <Emoji symbol="🎖️" /> Rol:
                <select
                  value={form.rol}
                  onChange={e => setForm({ ...form, rol: e.target.value })}
                  required
                >
                  <option value="admin">Administrador</option>
                  <option value="registrador">Registrador</option>
                </select>
              </label>
              <label>
                <input
                  type="checkbox"
                  checked={form.activo}
                  onChange={e => setForm({ ...form, activo: e.target.checked })}
                /> <Emoji symbol="✔" /> Usuario activo
              </label>
              <div style={{ marginTop: 14 }}>
                <button type="submit" className="save-btn" disabled={saving}>
                  <Emoji symbol="💾" /> Guardar
                </button>
                <button type="button" className="cancel-btn" onClick={() => setModal({ open: false, usuario: null })}>
                  <Emoji symbol="❌" /> Cancelar
                </button>
              </div>
              {error && <div className="error-message">{error}</div>}
            </form>
          </div>
        </div>
      )}
    </div>
  )
}


----- C:\parking-app\src\main.jsx -----

// src/main.jsx
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import App from './App.jsx'

if ('serviceWorker' in navigator) {
  window.addEventListener('load', () => {
    navigator.serviceWorker.register('/service-worker.js');
  });
}

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)


----- C:\parking-app\src\supabaseClient.js -----

// src/supabaseClient.js
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY

export const supabase = createClient(supabaseUrl, supabaseAnonKey)


----- C:\parking-app\src\components\AcercaDe.jsx -----

// src/components/AcercaDe.jsx
import Emoji from './Emoji'

export default function AcercaDe() {
  return (
    <section
      className="acerca-de-container"
      style={{
        background: '#f8fafc',
        borderRadius: 16,
        boxShadow: '0 4px 6px rgba(0,0,0,0.05)',
        padding: '2rem',
        maxWidth: 700,
        margin: '2rem auto',
        textAlign: 'left'
      }}
    >
      <h2 style={{ fontWeight: 700, fontSize: '1.5rem', marginBottom: 12 }}>
        <Emoji symbol="ℹ️" label="Acerca de" /> Acerca de la aplicación
      </h2>
      <p style={{ fontSize: '1.08rem', marginBottom: 14 }}>
        <Emoji symbol="🚗" label="Parqueadero" /> <b>Aplicación para Gestión de Parqueaderos de Visita</b> diseñada para el <b>Conjunto Habitacional Thomas II</b>. Permite registrar, consultar y gestionar el uso de parqueaderos de visita de manera eficiente, transparente y segura.
      </p>
      <p style={{ fontSize: '1.08rem', marginBottom: 14 }}>
        <Emoji symbol="👨‍💻" label="Desarrollador" /> <b>Desarrollado por:</b> Gabriel Ortega - Presidente CEO Thomas II
      </p>
      <p style={{ fontSize: '1.08rem', marginBottom: 14 }}>
        <Emoji symbol="✉️" label="Email" /> <b>Contacto:</b> <a href="mailto:gabrielortega@outlook.com">gabrielortega@outlook.com</a>
        <br />
        <Emoji symbol="📱" label="Celular" /> <b>Celular:</b> <a href="tel:0999268450">0999268450</a>
      </p>
    </section>
  )
}


----- C:\parking-app\src\components\Auth.jsx -----

// src/components/Auth.jsx
import { useState, useEffect } from 'react'
import { supabase } from '../supabaseClient'
import Loader from './Loader'

export default function Auth() {
  const [usuarios, setUsuarios] = useState([])
  const [email, setEmail] = useState('')
  const [rol, setRol] = useState('')
  const [loading, setLoading] = useState(true)
  const [sending, setSending] = useState(false)
  const [error, setError] = useState(null)
  const [otpSent, setOtpSent] = useState(false)
  const [otp, setOtp] = useState('')

  useEffect(() => {
    let ignore = false
    async function fetchUsuarios() {
      setLoading(true)
      setError(null)
      const { data, error } = await supabase
        .from('usuarios_app')
        .select('email, rol, activo')
        .eq('activo', true)
        .order('email', { ascending: true })
      if (!ignore) {
        if (error) setError('Error al cargar usuarios: ' + error.message)
        setUsuarios(data || [])
        setLoading(false)
      }
    }
    fetchUsuarios()
    return () => { ignore = true }
  }, [])

  useEffect(() => {
    const user = usuarios.find(u => u.email === email)
    setRol(user?.rol || '')
  }, [email, usuarios])

  // Paso 1: Enviar OTP al email
  const handleSendOtp = async (e) => {
    e.preventDefault()
    setSending(true)
    setError(null)
    if (!email) {
      setError('Debe seleccionar un email')
      setSending(false)
      return
    }
    localStorage.setItem('tempRol', rol)
    const { error: authError } = await supabase.auth.signInWithOtp({
      email,
      options: {
        shouldCreateUser: true,
        data: { rol }
      }
    })
    if (authError) setError('Error: ' + authError.message)
    else setOtpSent(true)
    setSending(false)
  }

  // Paso 2: Verificar OTP
  const handleVerifyOtp = async (e) => {
    e.preventDefault()
    setSending(true)
    setError(null)
    const { data, error: verifyError } = await supabase.auth.verifyOtp({
      email,
      token: otp,
      type: 'email'
    })
    if (verifyError) setError('Código inválido o expirado')
    setSending(false)
  }

  if (loading) return <Loader text="Cargando usuarios..." />

  return (
    <div className="auth-container" style={{
      maxWidth: 340,
      margin: '0 auto',
      padding: 32,
      background: '#fff',
      borderRadius: 12,
      boxShadow: '0 2px 12px #6c63ff22'
    }}>
      <h1 style={{ fontSize: '1.6rem', marginBottom: 24 }}>🔐 Acceso Usuario</h1>
      {!otpSent ? (
        <form onSubmit={handleSendOtp} style={{ display: 'flex', flexDirection: 'column', gap: 16 }}>
          <label>
            Email autorizado:
            <select
              value={email}
              onChange={e => setEmail(e.target.value)}
              required
              style={{
                padding: 12,
                borderRadius: 8,
                border: '1px solid #d1c4e9',
                fontSize: 16,
                backgroundColor: '#fff',
                marginTop: 6
              }}
            >
              <option value="">Seleccione su email...</option>
              {usuarios.map(u => (
                <option key={u.email} value={u.email}>{u.email}</option>
              ))}
            </select>
          </label>
          <label>
            Rol:
            <input
              type="text"
              value={rol}
              disabled
              style={{
                padding: 12,
                borderRadius: 8,
                border: '1px solid #d1c4e9',
                fontSize: 16,
                backgroundColor: '#f5f5f5',
                marginTop: 6
              }}
            />
          </label>
          <button
            disabled={sending || !email}
            style={{
              padding: '12px 0',
              borderRadius: 8,
              background: 'linear-gradient(90deg, #6c63ff 60%, #ff6f91 100%)',
              color: '#fff',
              fontWeight: 700,
              fontSize: 18,
              border: 'none',
              cursor: sending ? 'wait' : 'pointer',
              transition: 'background 0.2s'
            }}
          >
            {sending ? 'Enviando...' : '📩 Enviar código'}
          </button>
        </form>
      ) : (
        <form onSubmit={handleVerifyOtp} style={{ display: 'flex', flexDirection: 'column', gap: 16 }}>
          <label>
            Ingrese el código recibido en su email:
            <input
              type="text"
              value={otp}
              onChange={e => setOtp(e.target.value)}
              required
              maxLength={6}
              style={{
                padding: 12,
                borderRadius: 8,
                border: '1px solid #d1c4e9',
                fontSize: 16,
                backgroundColor: '#fff',
                marginTop: 6,
                letterSpacing: 3,
                textAlign: 'center'
              }}
            />
          </label>
          <button
            disabled={sending || !otp}
            style={{
              padding: '12px 0',
              borderRadius: 8,
              background: 'linear-gradient(90deg, #6c63ff 60%, #ff6f91 100%)',
              color: '#fff',
              fontWeight: 700,
              fontSize: 18,
              border: 'none',
              cursor: sending ? 'wait' : 'pointer',
              transition: 'background 0.2s'
            }}
          >
            {sending ? 'Verificando...' : '🔓 Ingresar'}
          </button>
          <button
            type="button"
            onClick={() => { setOtpSent(false); setOtp('') }}
            style={{
              background: 'none',
              color: '#6c63ff',
              border: 'none',
              marginTop: 8,
              cursor: 'pointer',
              textDecoration: 'underline'
            }}
          >
            Volver a enviar código
          </button>
        </form>
      )}
      {error && (
        <div style={{ color: 'red', marginTop: 10, fontWeight: 600 }}>
          {error}
        </div>
      )}
      <div style={{ fontSize: 13, color: '#888', marginTop: 18 }}>
        Solo emails autorizados y activos pueden ingresar.
      </div>
      <div
        style={{
          marginTop: 14,
          background: '#fffbe6',
          color: '#b26d00',
          border: '1px solid #ffe58f',
          borderRadius: 8,
          padding: '10px 14px',
          fontSize: 14,
          fontWeight: 600
        }}
      >
        ⚠️ Para agregar un usuario, primero debe ingresar con un usuario <b>administrador</b>.
      </div>
    </div>
  )
}


----- C:\parking-app\src\components\CapturaCamara.jsx -----

// src/components/CapturaCamara.jsx
import React, { useState, useEffect, useRef } from 'react'
import Emoji from './Emoji'

export default function CapturaCamara({ onCaptura }) {
  const videoRef = useRef(null)
  const canvasRef = useRef(null)
  const [error, setError] = useState(null)
  const [foto, setFoto] = useState(null)
  const [modoCamara, setModoCamara] = useState('environment')
  const [stream, setStream] = useState(null)

  // Iniciar cámara
  const iniciarCamara = async () => {
    try {
      const constraints = {
        video: {
          facingMode: modoCamara,
          width: { ideal: 1280 },
          height: { ideal: 720 }
        },
        audio: false
      }

      const mediaStream = await navigator.mediaDevices.getUserMedia(constraints)
      setStream(mediaStream)

      if (videoRef.current) {
        videoRef.current.srcObject = mediaStream
      }
    } catch (err) {
      setError(`Error de cámara: ${err.message}`)
    }
  }

  // Capturar foto
  const capturarFoto = () => {
    const video = videoRef.current
    const canvas = canvasRef.current
    const ctx = canvas.getContext('2d')

    canvas.width = video.videoWidth
    canvas.height = video.videoHeight
    ctx.drawImage(video, 0, 0, canvas.width, canvas.height)

    canvas.toBlob(blob => {
      const file = new File([blob], 'foto-capturada.jpg', { type: 'image/jpeg' })
      setFoto(URL.createObjectURL(file))
      onCaptura(file)
    }, 'image/jpeg', 0.9)
  }

  // Cambiar cámara frontal/trasera
  const cambiarCamara = () => {
    setModoCamara(prev => prev === 'user' ? 'environment' : 'user')
  }

  useEffect(() => {
    iniciarCamara()
    return () => {
      if (stream) {
        stream.getTracks().forEach(track => track.stop())
      }
    }
    // eslint-disable-next-line
  }, [modoCamara])

  if (error) return (
    <div className="error-camara">
      <Emoji symbol="📷" /> {error}
      <div style={{ fontSize: 14, marginTop: 8 }}>
        Asegúrate de permitir el acceso a la cámara
      </div>
    </div>
  )

  return (
    <div className="contenedor-camara">
      {!foto ? (
        <>
          <video
            ref={videoRef}
            autoPlay
            playsInline
            style={{
              width: '100%',
              maxWidth: '400px',
              borderRadius: '12px',
              transform: modoCamara === 'user' ? 'scaleX(-1)' : 'none'
            }}
          />

          <div className="controles-camara">
            <button
              type="button"
              onClick={capturarFoto}
              className="btn-capturar"
            >
              <Emoji symbol="📸" /> Capturar
            </button>

            <button
              type="button"
              onClick={cambiarCamara}
              className="btn-cambiar-camara"
            >
              <Emoji symbol="🔄" /> Cambiar
            </button>
          </div>
        </>
      ) : (
        <>
          <img
            src={foto}
            alt="Previsualización"
            style={{
              width: '100%',
              maxWidth: '400px',
              borderRadius: '12px',
              border: '2px solid #e0e0e0'
            }}
          />

          <div className="acciones-foto">
            <button
              type="button"
              onClick={() => setFoto(null)}
              className="btn-reintentar"
            >
              <Emoji symbol="🔄" /> Volver a tomar
            </button>
          </div>
        </>
      )}

      <canvas ref={canvasRef} style={{ display: 'none' }} />
    </div>
  )
}


----- C:\parking-app\src\components\Consultas.jsx -----

import React, { useState, useEffect } from 'react'
import { supabase } from '../supabaseClient'
import Loader from './Loader'
import Emoji from './Emoji'
import ResumenRegistros from './ResumenRegistros'
import useOnlineStatus from '../hooks/useOnlineStatus'
import dayjs from 'dayjs'

export default function Consultas() {
  const [filtros, setFiltros] = useState({
    fechaInicio: '',
    fechaFin: '',
    placa: '',
    propiedad: '',
    unidadAsignada: '',
    tipoVehiculo: ''
  })
  const [todos, setTodos] = useState([])
  const [resultados, setResultados] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [copropietarios, setCopropietarios] = useState([])
  const [editModal, setEditModal] = useState({ open: false, registro: null })
  const [editData, setEditData] = useState({})
  const isOnline = useOnlineStatus()

  useEffect(() => {
    const fetchCopropietarios = async () => {
      const { data, error } = await supabase
        .from('copropietarios')
        .select('id, nombre, propiedad, unidad_asignada')
      if (!error) setCopropietarios(data)
    }
    fetchCopropietarios()
  }, [])

  // Cargar todos los registros al montar o al volver a la vista
  useEffect(() => {
    const fetchTodos = async () => {
      setLoading(true)
      setError(null)
      try {
        const { data, error } = await supabase
          .from('registros_parqueadero')
          .select(`
            id,
            placa_vehiculo,
            tipo_vehiculo,
            fecha_hora_ingreso,
            observaciones,
            foto_url,
            gratis,
            monto,
            recaudado,
            fecha_recaudo,
            dependencia_id,
            observacion_audio_url,
            copropietarios:dependencia_id(nombre, propiedad, unidad_asignada),
            usuario:usuario_id!inner(id, nombre)
          `)
          .order('fecha_hora_ingreso', { ascending: false })
        if (error) throw error
        setTodos(data || [])
        setResultados(data || [])
      } catch (error) {
        setError(error.message)
        setTodos([])
        setResultados([])
      } finally {
        setLoading(false)
      }
    }
    fetchTodos()
  }, [])

  const propiedades = [...new Set(copropietarios.map(c => c.propiedad))].sort()
  const unidadesFiltradas = filtros.propiedad
    ? [...new Set(copropietarios.filter(c => c.propiedad === filtros.propiedad).map(c => c.unidad_asignada))]
    : []

  const copropietarioSeleccionado = copropietarios.find(
    c => c.propiedad === filtros.propiedad && c.unidad_asignada === filtros.unidadAsignada
  )

  // Filtra los registros en memoria al presionar buscar
  const handleSubmit = (e) => {
    e.preventDefault()
    let filtrados = [...todos]
    if (filtros.fechaInicio)
      filtrados = filtrados.filter(r => r.fecha_hora_ingreso >= `${filtros.fechaInicio}T00:00:00`)
    if (filtros.fechaFin)
      filtrados = filtrados.filter(r => r.fecha_hora_ingreso <= `${filtros.fechaFin}T23:59:59`)
    if (filtros.placa)
      filtrados = filtrados.filter(r => r.placa_vehiculo?.toLowerCase().includes(filtros.placa.toLowerCase()))
    if (filtros.tipoVehiculo)
      filtrados = filtrados.filter(r => r.tipo_vehiculo === filtros.tipoVehiculo)
    if (filtros.propiedad && !filtros.unidadAsignada) {
      filtrados = filtrados.filter(r => r.copropietarios?.propiedad === filtros.propiedad)
    }
    if (filtros.propiedad && filtros.unidadAsignada && copropietarioSeleccionado) {
      filtrados = filtrados.filter(r => r.dependencia_id === copropietarioSeleccionado.id)
    }
    setResultados(filtrados)
  }

  const handleChange = (e) => {
    const { name, value } = e.target
    setFiltros(prev => ({
      ...prev,
      [name]: value,
      ...(name === 'propiedad' && { unidadAsignada: '' })
    }))
  }

  const limpiarFiltros = () => {
    setFiltros({
      fechaInicio: '',
      fechaFin: '',
      placa: '',
      propiedad: '',
      unidadAsignada: '',
      tipoVehiculo: ''
    })
    setResultados(todos)
  }

  // Edición de registros
  const handleEdit = (registro) => {
    setEditModal({ open: true, registro })
    setEditData({
      placa_vehiculo: registro.placa_vehiculo,
      tipo_vehiculo: registro.tipo_vehiculo,
      fecha_hora_ingreso: registro.fecha_hora_ingreso?.slice(0, 10) || '',
      gratis: !!registro.gratis,
      observaciones: registro.observaciones || '',
      dependencia_id: registro.dependencia_id,
      recaudado: !!registro.recaudado,
      fecha_recaudo: registro.fecha_recaudo || ''
    })
  }

  const handleEditChange = (e) => {
    const { name, value, type, checked } = e.target
    setEditData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value,
      ...(name === 'recaudado' && !checked ? { fecha_recaudo: '' } : {})
    }))
  }

  const handleEditSave = async (e) => {
    e.preventDefault()
    const id = editModal.registro.id
    const monto = editData.gratis ? 0 : (editData.tipo_vehiculo === 'carro' ? 1.00 : 0.50)
    try {
      const { error } = await supabase
        .from('registros_parqueadero')
        .update({ ...editData, monto })
        .eq('id', id)
      if (error) throw error
      // Refresca todos y resultados
      const updated = todos.map(r => r.id === id ? { ...r, ...editData, monto } : r)
      setTodos(updated)
      setResultados(updated)
      setEditModal({ open: false, registro: null })
    } catch (error) {
      setError(error.message)
    }
  }

  const handleDelete = async (registro) => {
    if (!window.confirm('¿Seguro que deseas eliminar este registro?')) return
    try {
      const { error } = await supabase
        .from('registros_parqueadero')
        .delete()
        .eq('id', registro.id)
      if (error) throw error
      // Refresca todos y resultados
      const updated = todos.filter(r => r.id !== registro.id)
      setTodos(updated)
      setResultados(updated)
    } catch (err) {
      setError(err.message)
    }
  }

  return (
    <div className="consultas-container">
      <h2><Emoji symbol="🔎" label="Consultas" /> Consultas y Reportes</h2>
      <form onSubmit={handleSubmit} className="filtros-form">
        <div className="filtros-grid">
          <div className="filtro-item">
            <label>Fecha inicio:</label>
            <input
              type="date"
              name="fechaInicio"
              value={filtros.fechaInicio}
              onChange={handleChange}
            />
          </div>
          <div className="filtro-item">
            <label>Fecha fin:</label>
            <input
              type="date"
              name="fechaFin"
              value={filtros.fechaFin}
              onChange={handleChange}
            />
          </div>
          <div className="filtro-item">
            <label>Placa:</label>
            <input
              type="text"
              name="placa"
              placeholder="Buscar por placa"
              value={filtros.placa}
              onChange={handleChange}
            />
          </div>
          <div className="filtro-item">
            <label>Propiedad:</label>
            <select
              name="propiedad"
              value={filtros.propiedad}
              onChange={handleChange}
            >
              <option value="">Todas</option>
              {propiedades.map(prop => (
                <option key={prop} value={prop}>{prop}</option>
              ))}
            </select>
          </div>
          <div className="filtro-item">
            <label>Unidad asignada:</label>
            <select
              name="unidadAsignada"
              value={filtros.unidadAsignada}
              onChange={handleChange}
              disabled={!filtros.propiedad}
            >
              <option value="">Todas</option>
              {unidadesFiltradas.map(unidad => (
                <option key={unidad} value={unidad}>{unidad}</option>
              ))}
            </select>
          </div>
          <div className="filtro-item">
            <label>Tipo vehículo:</label>
            <select
              name="tipoVehiculo"
              value={filtros.tipoVehiculo}
              onChange={handleChange}
            >
              <option value="">Todos</option>
              <option value="carro">Carro 🚗</option>
              <option value="moto">Moto 🏍️</option>
            </select>
          </div>
        </div>
        <div className="acciones-filtros">
          <button
            type="submit"
            disabled={loading}
            className="btn-buscar"
          >
            {loading ? 'Buscando...' : 'Buscar'}
          </button>
          <button
            type="button"
            onClick={limpiarFiltros}
            className="btn-limpiar"
          >
            Limpiar
          </button>
        </div>
      </form>

      {error && <div className="error-message">{error}</div>}
      {loading && <Loader text="Buscando registros..." />}

      {resultados.length > 0 && (
        <ResumenRegistros registros={resultados} titulo="Resumen de Consultas" />
      )}

      {resultados.length > 0 ? (
        <div className="resultados-table-container">
          <table className="resultados-table">
            <thead>
              <tr>
                <th><Emoji symbol="📅" label="Fecha" /> Fecha</th>
                <th><Emoji symbol="🚗" label="Placa" /> Placa</th>
                <th><Emoji symbol="🏍️" label="Tipo" /> Tipo</th>
                <th><Emoji symbol="👥" label="Copropietario" /> Copropietario</th>
                <th><Emoji symbol="💵" label="Monto" /> Monto</th>
                <th><Emoji symbol="🟢" label="Estado" /> Estado</th>
                <th><Emoji symbol="📷" label="Foto" /> Foto</th>
                <th><Emoji symbol="👤" label="Registrado por" /> Registrado por</th>
                <th><Emoji symbol="⚙️" label="Acciones" /> Acciones</th>
              </tr>
            </thead>
            <tbody>
              {resultados.map(reg => (
                <tr key={reg.id} className={reg.gratis ? 'registro-gratis' : ''}>
                  <td>
                    {reg.fecha_hora_ingreso
                      ? dayjs(reg.fecha_hora_ingreso).format('DD/MM/YYYY')
                      : ''}
                  </td>
                  <td>{reg.placa_vehiculo}</td>
                  <td>
                    {reg.tipo_vehiculo?.toLowerCase() === 'carro' && <Emoji symbol="🚗" />}
                    {reg.tipo_vehiculo?.toLowerCase() === 'moto' && <Emoji symbol="🏍️" />}
                    <span style={{ marginLeft: 6 }}>{reg.tipo_vehiculo?.toUpperCase()}</span>
                  </td>
                  <td>
                    {reg.copropietarios?.nombre || '-'}
                    <br />
                    <small>
                      {reg.copropietarios?.propiedad || 'Sin propiedad'} - {reg.copropietarios?.unidad_asignada || 'Sin unidad'}
                    </small>
                  </td>
                  <td>${Number(reg.monto).toFixed(2)}</td>
                  <td>
                    {reg.gratis ? <Emoji symbol="🆓" label="Gratis" />
                      : reg.recaudado ? <Emoji symbol="🔗" label="Recaudado" />
                      : <Emoji symbol="⏳" label="Pendiente" />}
                  </td>
                  <td>
                    {reg.foto_url && (
                      <a href={reg.foto_url} target="_blank" rel="noopener noreferrer">
                        <img src={reg.foto_url} alt="Evidencia" className="thumbnail" />
                      </a>
                    )}
                  </td>
                  <td>{reg.usuario?.nombre || '-'}</td>
                  <td>
                    <button
                      className="edit-btn"
                      onClick={() => handleEdit(reg)}
                      title="Editar"
                      disabled={!isOnline}
                    >
                      <Emoji symbol="✏️" label="Editar" />
                    </button>
                    <button
                      className="delete-btn"
                      onClick={() => handleDelete(reg)}
                      title="Eliminar"
                    >
                      <Emoji symbol="🗑️" label="Eliminar" />
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      ) : (
        !loading && <div className="sin-resultados">No se encontraron resultados</div>
      )}

      {editModal.open && (
        <div className="modal-backdrop">
          <div className="modal-content">
            <h3><Emoji symbol="✏️" /> Editar Registro</h3>
            <form onSubmit={handleEditSave}>
              <label>
                Placa:
                <input
                  name="placa_vehiculo"
                  value={editData.placa_vehiculo}
                  onChange={handleEditChange}
                  required
                  disabled={!isOnline}
                />
              </label>
              <label>
                Tipo:
                <select
                  name="tipo_vehiculo"
                  value={editData.tipo_vehiculo}
                  onChange={handleEditChange}
                  required
                  disabled={!isOnline}
                >
                  <option value="carro">Carro 🚗</option>
                  <option value="moto">Moto 🏍️</option>
                </select>
              </label>
              <label>
                Fecha ingreso:
                <input
                  type="date"
                  name="fecha_hora_ingreso"
                  value={editData.fecha_hora_ingreso}
                  onChange={handleEditChange}
                  required
                  disabled={!isOnline}
                />
              </label>
              <label>
                Observaciones:
                <input
                  name="observaciones"
                  value={editData.observaciones}
                  onChange={handleEditChange}
                  disabled={!isOnline}
                />
              </label>
              <label>
                Copropietario:
                <select
                  name="dependencia_id"
                  value={editData.dependencia_id || ''}
                  onChange={handleEditChange}
                  required
                  disabled={!isOnline}
                >
                  <option value="">Seleccione...</option>
                  {copropietarios.map(dep => (
                    <option key={dep.id} value={dep.id}>
                      {dep.nombre} ({dep.propiedad} - {dep.unidad_asignada})
                    </option>
                  ))}
                </select>
              </label>
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  name="gratis"
                  checked={!!editData.gratis}
                  onChange={handleEditChange}
                  disabled={!isOnline}
                />
                <Emoji symbol="🆓" label="Gratis" /> Gratis
              </label>
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  name="recaudado"
                  checked={!!editData.recaudado}
                  onChange={handleEditChange}
                  disabled={!isOnline}
                />
                <Emoji symbol="🔗" label="Recaudado" /> Recaudado
              </label>
              {editData.recaudado && (
                <label>
                  Fecha Recaudo:
                  <input
                    type="date"
                    name="fecha_recaudo"
                    value={editData.fecha_recaudo || ''}
                    onChange={handleEditChange}
                    required={!!editData.recaudado}
                    disabled={!isOnline || !editData.recaudado}
                  />
                </label>
              )}
              <div className="acciones-modal">
                <button type="submit" className="save-btn" disabled={!isOnline}>
                  Guardar
                </button>
                <button
                  type="button"
                  className="cancel-btn"
                  onClick={() => setEditModal({ open: false, registro: null })}
                >
                  Cancelar
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  )
}


----- C:\parking-app\src\components\DescargoGestion.jsx -----

// src/components/DescargoGestion.jsx
import React, { useState } from "react";
import { useForm, Controller } from "react-hook-form";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import { supabase } from "../supabaseClient";
import Emoji from "./Emoji";
import Loader from "./Loader";

export default function DescargoGestion() {
  const { register, handleSubmit, control, reset, watch, setValue, formState: { errors, isSubmitting } } = useForm({
    defaultValues: {
      descripcion: "",
      fecha: new Date(),
      esfuerzo: [],
      monto: "",
      horas: "",
      materiales: "",
      observaciones: "",
      archivos: [],
    }
  });

  const [mensaje, setMensaje] = useState("");
  const [subiendo, setSubiendo] = useState(false);
  const [archivosPreview, setArchivosPreview] = useState([]);

  // Previsualización de archivos
  const handleArchivos = (e) => {
    const files = Array.from(e.target.files);
    setValue("archivos", files);
    setArchivosPreview(files.map(f =>
      f.type.startsWith("image/")
        ? URL.createObjectURL(f)
        : null
    ));
  };

  // Envío del formulario
  const onSubmit = async (data) => {
    setMensaje("");
    setSubiendo(true);
    let archivosUrls = [];

    try {
      // Subida de archivos
      if (data.archivos?.length > 0) {
        for (let file of data.archivos) {
          const ext = file.name.split(".").pop();
          const nombre = `${Date.now()}_${Math.random().toString(36).substring(2,8)}.${ext}`;
          const { error: uploadError } = await supabase.storage
            .from("descargos-evidencias")
            .upload(nombre, file);
          if (uploadError) throw uploadError;
          const { data: urlData } = supabase.storage
            .from("descargos-evidencias")
            .getPublicUrl(nombre);
          archivosUrls.push(urlData.publicUrl);
        }
      }

      // Crear registro
      const registro = {
        descripcion: data.descripcion,
        fecha: data.fecha.toISOString(),
        esfuerzo: data.esfuerzo,
        monto: data.monto ? Number(data.monto) : null,
        horas: data.horas ? Number(data.horas) : null,
        materiales: data.materiales || null,
        observaciones: data.observaciones || null,
        archivos: archivosUrls,
      };

      const { error } = await supabase
        .from("descargos_gestion")
        .insert([registro]);

      if (error) throw error;

      setMensaje("✅ ¡Descargo registrado exitosamente!");
      reset();
      setArchivosPreview([]);
    } catch (error) {
      setMensaje(`⚠️ Error: ${error.message}`);
    } finally {
      setSubiendo(false);
    }
  };

  const esfuerzoSeleccionado = watch("esfuerzo") || [];

  return (
    <div className="descargo-gestion-container"
      style={{
        background: "linear-gradient(135deg, #e0e7ff 0%, #f8fafc 100%)",
        borderRadius: 24,
        boxShadow: "0 6px 32px #6366f133",
        padding: "2.5rem 1.5rem",
        maxWidth: 540,
        margin: "2.5rem auto",
        transition: "background 0.4s"
      }}
    >
      <h2 style={{ display: 'flex', alignItems: 'center', gap: 10, fontWeight: 700, fontSize: '1.6rem', marginBottom: 16 }}>
        <Emoji symbol="📝" /> Descargo de Gestión
      </h2>
      <form onSubmit={handleSubmit(onSubmit)} autoComplete="off" style={{ display: "flex", flexDirection: "column", gap: 20 }}>
        <label>
          <Emoji symbol="💡" /> <b>Descripción de la gestión</b>
          <input
            type="text"
            {...register("descripcion", { required: "Campo obligatorio", maxLength: { value: 120, message: "Máximo 120 caracteres" } })}
            placeholder="Ej: Reparación de luminarias"
            className={`input-modern ${errors.descripcion ? 'input-error' : ''}`}
          />
          {errors.descripcion && <span className="error-message">{errors.descripcion.message}</span>}
        </label>
        <label>
          <Emoji symbol="📅" /> <b>Fecha de lo gestionado</b>
          <Controller
            control={control}
            name="fecha"
            rules={{ required: "Campo obligatorio" }}
            render={({ field }) => (
              <DatePicker
                placeholderText="Selecciona fecha y hora"
                showTimeSelect
                timeFormat="HH:mm"
                timeIntervals={15}
                dateFormat="yyyy-MM-dd HH:mm"
                timeCaption="Hora"
                selected={field.value}
                onChange={field.onChange}
                className="input-modern"
              />
            )}
          />
          {errors.fecha && <span className="error-message">{errors.fecha.message}</span>}
        </label>
        <label>
          <Emoji symbol="🗂️" /> <b>Tipo de esfuerzo</b>
          <select
            {...register("esfuerzo", { required: "Seleccione al menos uno" })}
            multiple
            className="input-modern"
            style={{ minHeight: 70 }}
          >
            <option value="económico">💲 Económico</option>
            <option value="participativo">🤝 Participativo</option>
            <option value="utilitarios">🛠️ Utilitarios</option>
          </select>
          {errors.esfuerzo && <span className="error-message">{errors.esfuerzo.message}</span>}
        </label>
        {esfuerzoSeleccionado.includes("económico") && (
          <label>
            <Emoji symbol="💵" /> <b>Monto económico ($)</b>
            <input
              type="number"
              step="0.01"
              {...register("monto", { min: 0 })}
              placeholder="Ej: 45.00"
              className="input-modern"
            />
          </label>
        )}
        {esfuerzoSeleccionado.includes("participativo") && (
          <label>
            <Emoji symbol="⏳" /> <b>Horas de mano de obra</b>
            <input
              type="number"
              step="0.5"
              {...register("horas", { min: 0 })}
              placeholder="Ej: 3.5"
              className="input-modern"
            />
          </label>
        )}
        {esfuerzoSeleccionado.includes("utilitarios") && (
          <label>
            <Emoji symbol="🧰" /> <b>Materiales/insumos utilizados</b>
            <input
              type="text"
              {...register("materiales")}
              placeholder="Ej: 2 focos, 1 galón pintura"
              className="input-modern"
            />
          </label>
        )}
        <label>
          <Emoji symbol="📎" /> <b>Evidencias (facturas, recibos, fotos)</b>
          <input
            type="file"
            accept="image/*,application/pdf"
            multiple
            onChange={handleArchivos}
            className="input-modern"
          />
          <span style={{ fontSize: 13, color: "#888" }}>
            Puedes adjuntar imágenes (jpg, png), PDF, etc.
          </span>
          <div style={{ display: "flex", gap: 10, marginTop: 8, flexWrap: 'wrap' }}>
            {archivosPreview.map((src, i) =>
              src ? (
                <img
                  key={i}
                  src={src}
                  alt={`Evidencia ${i + 1}`}
                  style={{ width: 60, height: 60, objectFit: "cover", borderRadius: 8, border: '1.5px solid #a5b4fc' }}
                />
              ) : null
            )}
          </div>
        </label>
        <label>
          <Emoji symbol="📝" /> <b>Observaciones adicionales</b>
          <textarea
            {...register("observaciones")}
            rows={2}
            placeholder="Detalles adicionales, responsables, etc."
            className="input-modern"
          />
        </label>
        <button
          type="submit"
          disabled={subiendo || isSubmitting}
          className="btn-disruptivo"
          style={{
            background: "linear-gradient(90deg, #6366f1 60%, #38bdf8 100%)",
            color: "#fff",
            padding: "14px 0",
            borderRadius: 12,
            fontWeight: 700,
            fontSize: 18,
            boxShadow: "0 2px 12px #6366f144",
            border: "none",
            cursor: subiendo ? 'wait' : 'pointer',
            transition: "background 0.2s"
          }}
        >
          {subiendo ? <><Emoji symbol="⏳" /> Registrando...</> : <><Emoji symbol="📤" /> Registrar descargo</>}
        </button>
        {mensaje && (
          <div className="info-message" style={{
            marginTop: 14,
            background: mensaje.startsWith('✅') ? '#e0ffe8' : '#fffbe6',
            color: mensaje.startsWith('✅') ? '#22c55e' : '#b26d00',
            border: mensaje.startsWith('✅') ? '1.5px solid #22c55e' : '1.5px solid #ffe58f',
            borderRadius: 8,
            padding: '10px 14px',
            fontSize: 15,
            fontWeight: 600
          }}>
            {mensaje}
          </div>
        )}
      </form>
    </div>
  )
}


----- C:\parking-app\src\components\Emoji.jsx -----

// src/components/Emoji.jsx
export default function Emoji({ symbol, label }) {
  return (
    <span role="img" aria-label={label} aria-hidden={label ? "false" : "true"}>
      {symbol}
    </span>
  )
}


----- C:\parking-app\src\components\GestionCopropietarios.jsx -----

import React, { useState, useEffect } from 'react'
import { supabase } from '../supabaseClient'
import Loader from './Loader'
import Emoji from './Emoji'

export default function GestionCopropietarios() {
  const [copropietarios, setCopropietarios] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [modal, setModal] = useState({ open: false, copropietario: null })
  const [form, setForm] = useState({ nombre: '', propiedad: '', unidad_asignada: '' })

  // Leer copropietarios
  const fetchCopropietarios = async () => {
    setLoading(true)
    const { data, error } = await supabase.from('copropietarios').select('*').order('propiedad')
    if (error) setError(error.message)
    else setCopropietarios(data)
    setLoading(false)
  }

  useEffect(() => { fetchCopropietarios() }, [])

  // Crear o actualizar copropietario
  const handleSave = async (e) => {
    e.preventDefault()
    setError(null)
    if (!form.nombre || !form.propiedad || !form.unidad_asignada) {
      setError('Todos los campos son obligatorios')
      return
    }
    if (modal.copropietario) {
      // Update
      const { error } = await supabase
        .from('copropietarios')
        .update(form)
        .eq('id', modal.copropietario.id)
      if (error) setError(error.message)
    } else {
      // Create
      const { error } = await supabase
        .from('copropietarios')
        .insert([form])
      if (error) setError(error.message)
    }
    setModal({ open: false, copropietario: null })
    setForm({ nombre: '', propiedad: '', unidad_asignada: '' })
    fetchCopropietarios()
  }

  // Eliminar copropietario
  const handleDelete = async (id) => {
    if (!window.confirm('¿Eliminar copropietario?')) return
    const { error } = await supabase.from('copropietarios').delete().eq('id', id)
    if (error) setError(error.message)
    fetchCopropietarios()
  }

  // Abrir modal para editar
  const handleEdit = (copropietario) => {
    setForm({
      nombre: copropietario.nombre,
      propiedad: copropietario.propiedad,
      unidad_asignada: copropietario.unidad_asignada
    })
    setModal({ open: true, copropietario })
  }

  // Abrir modal para crear
  const handleNew = () => {
    setForm({ nombre: '', propiedad: '', unidad_asignada: '' })
    setModal({ open: true, copropietario: null })
  }

  return (
    <div className="gestion-copropietarios-container">
      <h2>
        <Emoji symbol="👥" label="Copropietarios" /> Gestión de Copropietarios
      </h2>
      <button className="edit-btn" onClick={handleNew}>
        <Emoji symbol="➕" label="Agregar" /> Nuevo copropietario
      </button>
      {loading ? <Loader /> : (
        <table className="resultados-table">
          <thead>
            <tr>
              <th><Emoji symbol="🧑" label="Nombre" /> Nombre</th>
              <th><Emoji symbol="🏢" label="Propiedad" /> Propiedad</th>
              <th><Emoji symbol="🔢" label="Unidad" /> Unidad</th>
              <th><Emoji symbol="⚙️" label="Acciones" /> Acciones</th>
            </tr>
          </thead>
          <tbody>
            {copropietarios.map(c => (
              <tr key={c.id}>
                <td>{c.nombre}</td>
                <td>{c.propiedad}</td>
                <td>{c.unidad_asignada}</td>
                <td>
                  <button className="edit-btn" onClick={() => handleEdit(c)} title="Editar">
                    <Emoji symbol="✏️" label="Editar" />
                  </button>
                  <button className="delete-btn" onClick={() => handleDelete(c.id)} title="Eliminar">
                    <Emoji symbol="🗑️" label="Eliminar" />
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
      {error && <div className="error-message">{error}</div>}

      {/* Modal para crear/editar */}
      {modal.open && (
        <div className="modal-backdrop">
          <div className="modal-content">
            <h3>
              <Emoji symbol={modal.copropietario ? "✏️" : "➕"} label={modal.copropietario ? "Editar" : "Nuevo"} />{' '}
              {modal.copropietario ? 'Editar' : 'Nuevo'} Copropietario
            </h3>
            <form className="modal-form" onSubmit={handleSave}>
              <label>
                <Emoji symbol="🧑" label="Nombre" /> Nombre:
                <input
                  value={form.nombre}
                  onChange={e => setForm({ ...form, nombre: e.target.value })}
                  required
                />
              </label>
              <label>
                <Emoji symbol="🏢" label="Propiedad" /> Propiedad:
                <input
                  value={form.propiedad}
                  onChange={e => setForm({ ...form, propiedad: e.target.value })}
                  required
                />
              </label>
              <label>
                <Emoji symbol="🔢" label="Unidad" /> Unidad asignada:
                <input
                  value={form.unidad_asignada}
                  onChange={e => setForm({ ...form, unidad_asignada: e.target.value })}
                  required
                />
              </label>
              <div>
                <button type="submit" className="save-btn">
                  <Emoji symbol="💾" label="Guardar" /> Guardar
                </button>
                <button type="button" className="cancel-btn" onClick={() => setModal({ open: false, copropietario: null })}>
                  <Emoji symbol="❌" label="Cancelar" /> Cancelar
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  )
}


----- C:\parking-app\src\components\ListaRegistros.jsx -----

// src/components/ListaRegistros.jsx
import React, { useEffect, useState } from 'react'
import { supabase } from '../supabaseClient'
import Loader from './Loader'
import Emoji from './Emoji'
import './ListaRegistros.css'
import dayjs from 'dayjs'
import useOnlineStatus from '../hooks/useOnlineStatus'

export default function ListaRegistros({ refreshKey, usuarioApp, onRegistrosFiltradosChange }) {
  const [registros, setRegistros] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [copropietarios, setCopropietarios] = useState([])
  const [filtros, setFiltros] = useState({ propiedad: '', unidadAsignada: '' })
  const [editModal, setEditModal] = useState({ open: false, registro: null })
  const [editData, setEditData] = useState({})
  const [eliminandoAudio, setEliminandoAudio] = useState(false)
  const isOnline = useOnlineStatus()

  useEffect(() => {
    const fetchCopropietarios = async () => {
      const { data, error } = await supabase
        .from('copropietarios')
        .select('id, nombre, propiedad, unidad_asignada')
      if (!error) setCopropietarios(data)
    }
    fetchCopropietarios()
  }, [])

  const propiedades = [...new Set(copropietarios.map(c => c.propiedad))].sort()
  const unidadesFiltradas = filtros.propiedad
    ? [...new Set(copropietarios.filter(c => c.propiedad === filtros.propiedad).map(c => c.unidad_asignada))]
    : []

  const fetchRegistros = async () => {
    setLoading(true)
    setError(null)
    try {
      if (isOnline) {
        const { data, error } = await supabase
          .from('registros_parqueadero')
          .select(`
            id,
            placa_vehiculo,
            tipo_vehiculo,
            fecha_hora_ingreso,
            observaciones,
            foto_url,
            monto,
            gratis,
            recaudado,
            fecha_recaudo,
            dependencia_id,
            observacion_audio_url,
            copropietarios:dependencia_id(nombre, propiedad, unidad_asignada),
            usuario:usuario_id!inner(id, nombre)
          `)
          .order('fecha_hora_ingreso', { ascending: false })
        if (error) throw error
        setRegistros(data)
        localStorage.setItem('registros_offline', JSON.stringify(data || []))
      } else {
        const localData = JSON.parse(localStorage.getItem('registros_offline') || '[]')
        setRegistros(localData)
      }
    } catch (error) {
      setError(error.message)
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => { fetchRegistros() }, [refreshKey, isOnline])

  const handleFiltroChange = (e) => {
    const { name, value } = e.target
    setFiltros(prev => ({
      ...prev,
      [name]: value,
      ...(name === 'propiedad' && { unidadAsignada: '' })
    }))
  }

  const registrosFiltrados = registros.filter(reg => {
    const coincideProp = !filtros.propiedad || (reg.copropietarios?.propiedad || '') === filtros.propiedad
    const coincideUnidad = !filtros.unidadAsignada || (reg.copropietarios?.unidad_asignada || '') === filtros.unidadAsignada
    return coincideProp && coincideUnidad
  })

  useEffect(() => {
    if (onRegistrosFiltradosChange) {
      onRegistrosFiltradosChange(registrosFiltrados)
    }
  }, [registrosFiltrados, onRegistrosFiltradosChange])

  const totalMonto = registrosFiltrados.reduce(
    (acc, reg) => acc + Number(reg.monto || 0),
    0
  )

  // Edición
  const handleEdit = (registro) => {
    setEditModal({ open: true, registro })
    setEditData({
      placa_vehiculo: registro.placa_vehiculo,
      tipo_vehiculo: registro.tipo_vehiculo,
      fecha_hora_ingreso: registro.fecha_hora_ingreso ? registro.fecha_hora_ingreso.slice(0, 10) : '',
      gratis: !!registro.gratis,
      observaciones: registro.observaciones || '',
      dependencia_id: registro.dependencia_id,
      recaudado: !!registro.recaudado,
      fecha_recaudo: registro.fecha_recaudo || '',
      observacion_audio_url: registro.observacion_audio_url || '',
      nuevoAudio: null
    })
  }

  const handleEditChange = (e) => {
    const { name, value, type, checked } = e.target
    setEditData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value,
      ...(name === 'recaudado' && !checked ? { fecha_recaudo: '' } : {})
    }))
  }

  const handleEditSave = async (e) => {
    e.preventDefault()
    const id = editModal.registro.id
    const monto = editData.gratis ? 0 : (editData.tipo_vehiculo === 'carro' ? 1.00 : 0.50)
    let audioUrlFinal = editData.observacion_audio_url

    // Subida de nuevo audio
    if (editData.nuevoAudio) {
      const fileName = `audio_obs_edit_${editData.placa_vehiculo}_${Date.now()}.webm`
      const { error: uploadError } = await supabase
        .storage
        .from('evidencias-parqueadero')
        .upload(fileName, editData.nuevoAudio, { contentType: 'audio/webm' })
      if (uploadError) {
        setError('Error al subir el audio: ' + uploadError.message)
        return
      }
      const { data: publicUrlData } = supabase
        .storage
        .from('evidencias-parqueadero')
        .getPublicUrl(fileName)
      audioUrlFinal = publicUrlData.publicUrl
    }

    try {
      const { error } = await supabase
        .from('registros_parqueadero')
        .update({
          ...editData,
          monto,
          fecha_recaudo: editData.recaudado ? editData.fecha_recaudo : null,
          observacion_audio_url: audioUrlFinal
        })
        .eq('id', id)

      if (error) throw error

      setRegistros(registros.map(r =>
        r.id === id ? { ...r, ...editData, monto, observacion_audio_url: audioUrlFinal } : r
      ))

      if (!isOnline) {
        const localData = JSON.parse(localStorage.getItem('registros_offline') || '[]')
        const updatedData = localData.map(item =>
          item.id === id ? { ...item, ...editData, monto, observacion_audio_url: audioUrlFinal } : item
        )
        localStorage.setItem('registros_offline', JSON.stringify(updatedData))
      }

      setEditModal({ open: false, registro: null })
      setEditData({})
    } catch (error) {
      setError(error.message)
    }
  }

  // Eliminar audio
  const handleEliminarAudio = async () => {
    if (!editData.observacion_audio_url) return
    if (!window.confirm('¿Eliminar esta evidencia auditiva?')) return
    setEliminandoAudio(true)
    try {
      if (editData.observacion_audio_url && editData.observacion_audio_url !== 'pendiente-sync') {
        const urlParts = editData.observacion_audio_url.split('/')
        const fileName = urlParts[urlParts.length - 1]
        const { error: deleteError } = await supabase
          .storage
          .from('evidencias-parqueadero')
          .remove([fileName])
        if (deleteError) throw deleteError
      }
      setEditData(prev => ({ ...prev, observacion_audio_url: '', nuevoAudio: null }))
      const id = editModal.registro.id
      await supabase
        .from('registros_parqueadero')
        .update({ observacion_audio_url: null })
        .eq('id', id)
      setRegistros(registros.map(r =>
        r.id === id ? { ...r, observacion_audio_url: null } : r
      ))
    } catch (error) {
      setError('Error eliminando audio: ' + error.message)
    }
    setEliminandoAudio(false)
  }

  const handleDelete = async (registro) => {
    if (!window.confirm('¿Seguro que deseas eliminar este registro?')) return
    try {
      if (isOnline) {
        const { error } = await supabase
          .from('registros_parqueadero')
          .delete()
          .eq('id', registro.id)
        if (error) throw error
      }

      const updatedRegistros = registros.filter(r => r.id !== registro.id)
      setRegistros(updatedRegistros)

      if (!isOnline) {
        const localData = JSON.parse(localStorage.getItem('registros_offline') || '[]')
        const filteredData = localData.filter(item => item.id !== registro.id)
        localStorage.setItem('registros_offline', JSON.stringify(filteredData))
      }
    } catch (err) {
      setError('Error eliminando registro: ' + err.message)
    }
  }

  if (loading) return <Loader text="Cargando registros..." />
  if (error) return <div className="error-message">{error}</div>

  return (
    <div className="lista-registros-container">
      <div className="offline-banner" style={{
        display: !isOnline ? 'flex' : 'none',
        background: '#fff3cd',
        color: '#856404',
        padding: '8px 16px',
        borderRadius: '8px',
        marginBottom: '16px',
        alignItems: 'center',
        gap: '8px'
      }}>
        <Emoji symbol="⚡" /> Modo offline - Mostrando datos almacenados localmente
      </div>

      <h2>
        <Emoji symbol="📝" label="Últimos Registros" /> Últimos Registros
      </h2>

      <div style={{ display: 'flex', gap: 16, marginBottom: 16 }}>
        <div>
          <label>Propiedad:</label>
          <select
            name="propiedad"
            value={filtros.propiedad}
            onChange={handleFiltroChange}
          >
            <option value="">Todas</option>
            {propiedades.map(prop => (
              <option key={prop} value={prop}>{prop}</option>
            ))}
          </select>
        </div>
        <div>
          <label>Unidad asignada:</label>
          <select
            name="unidadAsignada"
            value={filtros.unidadAsignada}
            onChange={handleFiltroChange}
            disabled={!filtros.propiedad}
          >
            <option value="">Todas</option>
            {unidadesFiltradas.map(unidad => (
              <option key={unidad} value={unidad}>{unidad}</option>
            ))}
          </select>
        </div>
      </div>

      <div className="registros-table-wrapper">
        <table className="registros-table">
          <thead>
            <tr>
              <th style={{ textAlign: 'center' }}><Emoji symbol="📅" /> Fecha/Hora</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="🚗" /> Placa</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="🏍️" /> Tipo</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="📝" /> Observaciones</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="💵" /> Monto</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="🆓" /> Gratis</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="🔗" /> Recaudado</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="📅" /> Fecha Recaudo</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="🏠" /> Copropietario</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="👤" /> Registrado por</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="📷" /> Foto</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="🔊" /> Audio</th>
              <th style={{ textAlign: 'center' }}><Emoji symbol="⚙️" /> Acciones</th>
            </tr>
          </thead>

          <tbody>
            {registrosFiltrados.length > 0 ? (
              <>
                {registrosFiltrados.map(reg => (
                  <tr key={reg.id}>
                    <td style={{ textAlign: 'center' }}>
                      {reg.fecha_hora_ingreso
                        ? dayjs(reg.fecha_hora_ingreso).format('DD/MM/YYYY HH:mm')
                        : ''}
                    </td>
                    <td style={{ textAlign: 'center' }}>{reg.placa_vehiculo}</td>
                    <td style={{ textAlign: 'center' }}>
                      {reg.tipo_vehiculo?.toLowerCase() === 'carro' && (
                        <Emoji symbol="🚗" label="Carro" />
                      )}
                      {reg.tipo_vehiculo?.toLowerCase() === 'moto' && (
                        <Emoji symbol="🏍️" label="Moto" />
                      )}
                      <span style={{ marginLeft: 6, textTransform: 'capitalize' }}>
                        {reg.tipo_vehiculo}
                      </span>
                    </td>
                    <td>{reg.observaciones || '-'}</td>
                    <td style={{ textAlign: 'center' }}>${Number(reg.monto).toFixed(2)}</td>
                    <td style={{ textAlign: 'center' }}>
                      {reg.gratis
                        ? <Emoji symbol="🆓" label="Gratis" />
                        : <Emoji symbol="❌" label="No Gratis" />}
                    </td>
                    <td style={{ textAlign: 'center' }}>
                      {reg.recaudado
                        ? <Emoji symbol="🔗" label="Recaudado" />
                        : <Emoji symbol="⏳" label="Pendiente" />}
                    </td>
                    <td style={{ textAlign: 'center' }}>
                      {reg.fecha_recaudo || '-'}
                    </td>
                    <td>
                      <Emoji symbol="🏠" label="Casa" />{' '}
                      {reg.copropietarios?.nombre || '-'}
                      <br />
                      <small>
                        {reg.copropietarios?.propiedad || ''} - {reg.copropietarios?.unidad_asignada || ''}
                      </small>
                    </td>
                    <td style={{ textAlign: 'center' }}>
                      {reg.usuario?.nombre || '-'}
                    </td>
                    <td style={{ textAlign: 'center' }}>
                      {reg.foto_url && (
                        <a href={reg.foto_url} target="_blank" rel="noopener noreferrer">
                          <img src={reg.foto_url} alt="Evidencia" className="thumbnail" />
                        </a>
                      )}
                    </td>
                    <td style={{ textAlign: 'center' }}>
                      {reg.observacion_audio_url && reg.observacion_audio_url !== 'pendiente-sync' ? (
                        <audio controls style={{ width: 90 }}>
                          <source src={reg.observacion_audio_url} type="audio/webm" />
                          Tu navegador no soporta audio.
                        </audio>
                      ) : (
                        <span style={{ color: '#aaa', fontSize: 14 }}>-</span>
                      )}
                    </td>
                    <td style={{ textAlign: 'center' }}>
                      <button
                        className="edit-btn"
                        title="Editar"
                        onClick={() => handleEdit(reg)}
                        style={{ marginRight: 6 }}
                        disabled={!isOnline}
                      >
                        <Emoji symbol="✏️" label="Editar" />
                      </button>
                      <button
                        className="delete-btn"
                        title="Eliminar"
                        onClick={() => handleDelete(reg)}
                      >
                        <Emoji symbol="🗑️" label="Eliminar" />
                      </button>
                    </td>
                  </tr>
                ))}
                <tr style={{ fontWeight: 'bold', background: '#f6f8fc' }}>
                  <td colSpan={4} style={{ textAlign: 'right' }}>
                    Total
                  </td>
                  <td style={{ textAlign: 'center' }}>
                    ${totalMonto.toFixed(2)}
                  </td>
                  <td colSpan={9}></td>
                </tr>
              </>
            ) : (
              <tr>
                <td colSpan="13" className="sin-resultados">
                  No se encontraron registros con los filtros seleccionados
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>

      {/* Modal de edición */}
      {editModal.open && (
        <div className="modal-backdrop">
          <div className="modal-content">
            <h3>Editar Registro</h3>
            <form className="modal-form" onSubmit={handleEditSave}>
              <label>
                Placa:
                <input
                  name="placa_vehiculo"
                  value={editData.placa_vehiculo}
                  onChange={handleEditChange}
                  required
                  disabled={!isOnline}
                />
              </label>
              <label>
                Tipo:
                <select
                  name="tipo_vehiculo"
                  value={editData.tipo_vehiculo}
                  onChange={handleEditChange}
                  required
                  disabled={!isOnline}
                >
                  <option value="carro">Carro</option>
                  <option value="moto">Moto</option>
                </select>
              </label>
              <label>
                Fecha ingreso:
                <input
                  type="date"
                  name="fecha_hora_ingreso"
                  value={editData.fecha_hora_ingreso}
                  onChange={handleEditChange}
                  required
                  disabled={!isOnline}
                />
              </label>
              <label>
                Observaciones:
                <input
                  name="observaciones"
                  value={editData.observaciones}
                  onChange={handleEditChange}
                  disabled={!isOnline}
                />
              </label>
              <label>
                Copropietario:
                <select
                  name="dependencia_id"
                  value={editData.dependencia_id || ''}
                  onChange={handleEditChange}
                  required
                  disabled={!isOnline}
                >
                  <option value="">Seleccione...</option>
                  {copropietarios.map(dep => (
                    <option key={dep.id} value={dep.id}>
                      {dep.nombre} ({dep.propiedad} - {dep.unidad_asignada})
                    </option>
                  ))}
                </select>
              </label>
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  name="gratis"
                  checked={!!editData.gratis}
                  onChange={handleEditChange}
                  disabled={!isOnline}
                />
                <Emoji symbol="🆓" label="Gratis" /> Gratis
              </label>
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  name="recaudado"
                  checked={!!editData.recaudado}
                  onChange={handleEditChange}
                  disabled={!isOnline}
                />
                <Emoji symbol="🔗" label="Recaudado" /> Recaudado
              </label>
              {editData.recaudado && (
                <label>
                  Fecha Recaudo:
                  <input
                    type="date"
                    name="fecha_recaudo"
                    value={editData.fecha_recaudo || ''}
                    onChange={handleEditChange}
                    required={!!editData.recaudado}
                    disabled={!isOnline || !editData.recaudado}
                  />
                </label>
              )}
              <label>
                Evidencia auditiva:
                {editData.observacion_audio_url && editData.observacion_audio_url !== 'pendiente-sync' ? (
                  <>
                    <audio controls style={{ width: '100%', margin: '8px 0' }}>
                      <source src={editData.observacion_audio_url} type="audio/webm" />
                      Tu navegador no soporta audio.
                    </audio>
                    <button
                      type="button"
                      onClick={handleEliminarAudio}
                      className="delete-btn"
                      style={{ marginTop: 8 }}
                      disabled={eliminandoAudio || !isOnline}
                    >
                      {eliminandoAudio ? 'Eliminando...' : <><Emoji symbol="🗑️" /> Eliminar audio</>}
                    </button>
                  </>
                ) : (
                  <span style={{ color: '#aaa', fontSize: 14 }}>No hay audio guardado.</span>
                )}
                <input
                  type="file"
                  accept="audio/*"
                  onChange={e => setEditData(prev => ({
                    ...prev,
                    nuevoAudio: e.target.files && e.target.files[0] ? e.target.files[0] : null
                  }))}
                  disabled={!isOnline}
                  style={{ marginTop: 8 }}
                />
                <span style={{ fontSize: 12, color: '#888' }}>
                  Puedes subir un nuevo archivo de audio para reemplazar el actual.
                </span>
              </label>
              <div style={{ marginTop: 18 }}>
                <button
                  type="submit"
                  className="save-btn"
                  disabled={!isOnline}
                >
                  Guardar
                </button>
                <button
                  type="button"
                  className="cancel-btn"
                  onClick={() => setEditModal({ open: false, registro: null })}
                >
                  Cancelar
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  )
}


----- C:\parking-app\src\components\Loader.jsx -----

// src/components/Loader.jsx
import React from 'react'

export default function Loader({ fullScreen = false, text = "⏳ Cargando..." }) {
  const loaderStyle = {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    minHeight: fullScreen ? '100vh' : '120px',
    width: '100%',
    background: fullScreen ? '#f5f6fa' : 'transparent',
    position: fullScreen ? 'fixed' : 'static',
    top: 0,
    left: 0,
    zIndex: 9999,
  }

  const spinnerStyle = {
    width: '48px',
    height: '48px',
    border: '6px solid #e0e0e0',
    borderTop: '6px solid #3498db',
    borderRadius: '50%',
    animation: 'spin 1s linear infinite',
    marginBottom: '1rem',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: '2rem'
  }

  return (
    <div style={loaderStyle}>
      <div style={spinnerStyle}>
        <span role="img" aria-label="reloj de arena" style={{ position: 'absolute', fontSize: '2.2rem', marginTop: 2 }}>
          ⏳
        </span>
      </div>
      <span style={{ color: '#2c3e50', fontWeight: 'bold', fontSize: '1.1rem' }}>{text}</span>
      <style>
        {`
          @keyframes spin {
            0% { transform: rotate(0deg);}
            100% { transform: rotate(360deg);}
          }
        `}
      </style>
    </div>
  )
}


----- C:\parking-app\src\components\MenuDesplegable.jsx -----

// src/components/MenuDesplegable.jsx
import React, { useState, useEffect, useRef } from 'react'
import Emoji from './Emoji'

export default function MenuDesplegable({ currentView, setCurrentView, usuarioApp }) {
  const [isOpen, setIsOpen] = useState(false)
  const menuRef = useRef(null)

  // Opciones del menú
  const menuItems = [
    { emoji: '📝', label: 'Registro', key: 'registro' },
    { emoji: '🔎', label: 'Consultas', key: 'consulta' },
    { emoji: '💰', label: 'Recaudación', key: 'recaudo' },
    { emoji: '👥', label: 'Copropietarios', key: 'copropietarios' },
    { emoji: '📤', label: 'Descargo Gestión', key: 'descargo' },
    { emoji: 'ℹ️', label: 'Acerca de', key: 'acerca' },
    ...(usuarioApp?.rol === 'admin'
      ? [{ emoji: '👤', label: 'Usuarios', key: 'usuarios' }]
      : [])
  ]

  // Cierra el menú al hacer clic fuera
  useEffect(() => {
    const handleClickOutside = (e) => {
      if (menuRef.current && !menuRef.current.contains(e.target)) {
        setIsOpen(false)
      }
    }
    document.addEventListener('mousedown', handleClickOutside)
    return () => document.removeEventListener('mousedown', handleClickOutside)
  }, [])

  return (
    <div className="menu-container relative" ref={menuRef}>
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="menu-button flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-all duration-300 shadow-lg"
      >
        <Emoji symbol="☰" label="Menú" className="mr-2" />
        <span className="font-semibold">Menú Principal</span>
      </button>

      {isOpen && (
        <div className="menu-dropdown absolute top-full left-0 mt-2 w-64 bg-white rounded-xl shadow-2xl border border-gray-100 z-50">
          <div className="p-2 space-y-1">
            {menuItems.map((item, index) => (
              <button
                key={index}
                onClick={() => {
                  setCurrentView(item.key)
                  setIsOpen(false)
                }}
                className={`flex items-center px-4 py-3 text-gray-800 hover:bg-blue-50 rounded-lg transition-colors duration-200 w-full text-left ${
                  currentView === item.key ? 'bg-blue-100 font-semibold' : ''
                }`}
                type="button"
              >
                <span className="text-xl mr-3"><Emoji symbol={item.emoji} /></span>
                <span>{item.label}</span>
              </button>
            ))}
          </div>
        </div>
      )}
    </div>
  )
}


----- C:\parking-app\src\components\Navbar.jsx -----

// src/components/Navbar.jsx
import React from 'react'
import { Link } from 'react-router-dom'
import MenuDesplegable from './MenuDesplegable'

export default function Navbar() {
  return (
    <nav className="navbar flex items-center justify-between px-6 py-4 bg-blue-700 text-white shadow-lg">
      <div className="flex items-center space-x-4">
        <Link to="/" className="text-2xl font-bold hover:text-blue-200 transition-colors flex items-center gap-2">
          <span role="img" aria-label="Casa">🏠</span>
          Conjunto Habitacional
        </Link>
      </div>
      <MenuDesplegable />
    </nav>
  )
}


----- C:\parking-app\src\components\RegistroParqueo.jsx -----

// src/components/RegistroParqueo.jsx
import React, { useState, useEffect, useRef } from 'react'
import { supabase } from '../supabaseClient'
import SelectorDeFoto from './SelectorDeFoto'
import { ReactMediaRecorder } from 'react-media-recorder'
import DatePicker from 'react-datepicker'
import 'react-datepicker/dist/react-datepicker.css'
import Emoji from './Emoji'

function addToSyncQueue(operation) {
  const queue = JSON.parse(localStorage.getItem('syncQueue') || '[]')
  queue.push({ ...operation, timestamp: new Date() })
  localStorage.setItem('syncQueue', JSON.stringify(queue))
}

function getToday() {
  return new Date()
}

const getPropiedadEmoji = (prop) => {
  if (/^(D|Depto|Depa)/i.test(prop)) return "🏢"
  if (/^(C|Casa)/i.test(prop)) return "🏠"
  return "🏘️"
}

export default function RegistroParqueo({ usuarioApp, onRegistroExitoso }) {
  const [placa, setPlaca] = useState('')
  const [tipoVehiculo, setTipoVehiculo] = useState('carro')
  const [propiedad, setPropiedad] = useState('')
  const [unidadAsignada, setUnidadAsignada] = useState('')
  const [copropietarios, setCopropietarios] = useState([])
  const [observaciones, setObservaciones] = useState('')
  const [fecha, setFecha] = useState(getToday())
  const [mensaje, setMensaje] = useState('')
  const [loading, setLoading] = useState(false)
  const [foto, setFoto] = useState(null)
  const [gratis, setGratis] = useState(false)
  const [audioBlob, setAudioBlob] = useState(null)
  const [audioUrl, setAudioUrl] = useState(null)
  const [historialPlacas, setHistorialPlacas] = useState([])
  const inputPlacaRef = useRef(null)

  useEffect(() => {
    const historial = JSON.parse(localStorage.getItem('historialPlacas') || '[]')
    setHistorialPlacas(historial)
  }, [])

  const actualizarHistorial = (nuevaPlaca) => {
    const placaLimpia = nuevaPlaca.toUpperCase().replace(/[^A-Z0-9]/g, '')
    if (!placaLimpia) return
    const nuevoHistorial = [
      placaLimpia,
      ...historialPlacas.filter(p => p !== placaLimpia)
    ].slice(0, 10)
    setHistorialPlacas(nuevoHistorial)
    localStorage.setItem('historialPlacas', JSON.stringify(nuevoHistorial))
  }

  useEffect(() => {
    const fetchCopropietarios = async () => {
      const { data, error } = await supabase
        .from('copropietarios')
        .select('id, nombre, propiedad, unidad_asignada')
      if (!error && data) setCopropietarios(data)
    }
    fetchCopropietarios()
  }, [])

  const propiedades = [...new Set(copropietarios.map(c => c.propiedad))].sort()
  const unidadesFiltradas = propiedad
    ? [...new Set(
        copropietarios
          .filter(c => c.propiedad === propiedad)
          .map(c => c.unidad_asignada)
      )].sort((a, b) => {
        if (!isNaN(a) && !isNaN(b)) return Number(a) - Number(b)
        return a.localeCompare(b, undefined, { numeric: true, sensitivity: 'base' })
      })
    : []

  const copropietarioSeleccionado = copropietarios.find(
    c => c.propiedad === propiedad && c.unidad_asignada === unidadAsignada
  )

  const handleFoto = (file) => setFoto(file)

  const handleAudioStop = async (blobUrl) => {
    setAudioUrl(blobUrl)
    const response = await fetch(blobUrl)
    const blob = await response.blob()
    setAudioBlob(blob)
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
    setMensaje('')
    setLoading(true)
    const placaFormateada = placa.toUpperCase().replace(/[^A-Z0-9]/g, '')
    if (!placaFormateada) {
      setMensaje('La placa es obligatoria')
      setLoading(false)
      return
    }
    actualizarHistorial(placaFormateada)
    let fotoUrl = null
    let audioUrlFinal = null

    if (foto) {
      const fileExt = foto.name.split('.').pop()
      const fileName = `${placaFormateada}_${Date.now()}.${fileExt}`
      if (navigator.onLine) {
        const { error: uploadError } = await supabase
          .storage
          .from('evidencias-parqueadero')
          .upload(fileName, foto)
        if (uploadError) {
          setMensaje('Error al subir la foto: ' + uploadError.message)
          setLoading(false)
          return
        }
        const { data: publicUrlData } = supabase
          .storage
          .from('evidencias-parqueadero')
          .getPublicUrl(fileName)
        fotoUrl = publicUrlData.publicUrl
      } else {
        fotoUrl = 'pendiente-sync'
      }
    }

    if (audioBlob) {
      const fileName = `audio_obs_${placaFormateada}_${Date.now()}.webm`
      if (navigator.onLine) {
        const { error: uploadError } = await supabase
          .storage
          .from('evidencias-parqueadero')
          .upload(fileName, audioBlob, { contentType: 'audio/webm' })
        if (uploadError) {
          setMensaje('Error al subir el audio: ' + uploadError.message)
          setLoading(false)
          return
        }
        const { data: publicUrlData } = supabase
          .storage
          .from('evidencias-parqueadero')
          .getPublicUrl(fileName)
        audioUrlFinal = publicUrlData.publicUrl
      } else {
        audioUrlFinal = 'pendiente-sync'
      }
    }

    const monto = gratis ? 0 : tipoVehiculo === 'carro' ? 1.00 : 0.50

    if (!copropietarioSeleccionado) {
      setMensaje('Debe seleccionar propiedad y unidad asignada válidas.')
      setLoading(false)
      return
    }

    const registro = {
      placa_vehiculo: placaFormateada,
      tipo_vehiculo: tipoVehiculo,
      dependencia_id: copropietarioSeleccionado.id,
      usuario_id: usuarioApp.id,
      observaciones: observaciones || null,
      fecha_hora_ingreso: fecha instanceof Date ? fecha.toISOString() : fecha,
      foto_url: fotoUrl,
      gratis,
      monto,
      observacion_audio_url: audioUrlFinal
    }

    if (navigator.onLine) {
      const { error } = await supabase
        .from('registros_parqueadero')
        .insert([registro])
      if (error) {
        setMensaje('Error al registrar: ' + error.message)
      } else {
        setMensaje('¡Registro exitoso!')
        if (onRegistroExitoso) onRegistroExitoso()
      }
    } else {
      addToSyncQueue({
        table: 'registros_parqueadero',
        method: 'insert',
        params: [[registro]]
      })
      const localData = JSON.parse(localStorage.getItem('registros_offline') || '[]')
      localStorage.setItem('registros_offline', JSON.stringify([...localData, registro]))
      setMensaje('Registro guardado offline. Se sincronizará cuando vuelvas a tener internet.')
    }

    setPlaca('')
    setTipoVehiculo('carro')
    setPropiedad('')
    setUnidadAsignada('')
    setObservaciones('')
    setFecha(getToday())
    setFoto(null)
    setGratis(false)
    setAudioBlob(null)
    setAudioUrl(null)
    setLoading(false)
  }

  return (
    <form onSubmit={handleSubmit} className="form-parqueo" style={{ textAlign: 'justify', maxWidth: 700, margin: '0 auto' }}>
      <h2>
        <Emoji symbol="📝" /> Registro de Parqueo de Visita
      </h2>
      <div style={{ marginBottom: 18, fontSize: 16, color: '#555' }}>
        <p>
          Ingresa los datos del vehículo visitante. Todos los campos marcados con * son obligatorios.
        </p>
      </div>

      <div className="selector-centrado">
        <input
          ref={inputPlacaRef}
          id="placa"
          type="text"
          placeholder="Placa del vehículo"
          value={placa}
          onChange={e => {
            const valor = e.target.value
              .toUpperCase()
              .replace(/[^A-Z0-9]/g, '')
              .substring(0, 10)
            setPlaca(valor)
          }}
          list="sugerencias-placas"
          maxLength={10}
          required
          pattern="[A-Z0-9]+"
          title="Solo letras mayúsculas y números"
          autoFocus
        />
        <datalist id="sugerencias-placas">
          {historialPlacas.map((placa, index) => (
            <option key={index} value={placa} />
          ))}
        </datalist>
      </div>

      <div className="selector-centrado">
        <button
          type="button"
          aria-label="Carro"
          className={tipoVehiculo === 'carro' ? 'emoji-selector selected' : 'emoji-selector'}
          onClick={() => setTipoVehiculo('carro')}
        >
          <Emoji symbol="🚗" label="Carro" />
        </button>
        <button
          type="button"
          aria-label="Moto"
          className={tipoVehiculo === 'moto' ? 'emoji-selector selected' : 'emoji-selector'}
          onClick={() => setTipoVehiculo('moto')}
        >
          <Emoji symbol="🏍️" label="Moto" />
        </button>
      </div>

      <div className="selector-centrado">
        {propiedades.map(p => (
          <button
            key={p}
            type="button"
            aria-label={p}
            className={propiedad === p ? 'emoji-selector selected' : 'emoji-selector'}
            onClick={() => {
              setPropiedad(p)
              setUnidadAsignada('')
            }}
          >
            <Emoji symbol={getPropiedadEmoji(p)} label={p} />
          </button>
        ))}
      </div>

      <div className="selector-centrado">
        <label htmlFor="unidadAsignada">
          <Emoji symbol="🔢" />
        </label>
        <select
          id="unidadAsignada"
          value={unidadAsignada}
          onChange={e => setUnidadAsignada(e.target.value)}
          required
          disabled={!propiedad}
        >
          <option value="">Seleccione</option>
          {unidadesFiltradas.map(u => <option key={u} value={u}>{u}</option>)}
        </select>
      </div>

      <div>
        <label htmlFor="observaciones">
          <Emoji symbol="📝" />
        </label>
        <input
          id="observaciones"
          type="text"
          value={observaciones}
          onChange={e => setObservaciones(e.target.value)}
          maxLength={100}
          placeholder="Ej: Vehículo de visita, entrega, etc."
        />
      </div>

      <div className="selector-centrado">
        <label htmlFor="fecha">
          <Emoji symbol="📅" />
        </label>
        <DatePicker
          id="fecha"
          selected={fecha}
          onChange={date => setFecha(date)}
          showTimeSelect
          timeFormat="HH:mm"
          timeIntervals={15}
          dateFormat="yyyy-MM-dd HH:mm"
          timeCaption="Hora"
          className="input"
          required
        />
        <label className="checkbox-label" style={{ marginLeft: 16 }}>
          <input
            type="checkbox"
            checked={gratis}
            onChange={e => setGratis(e.target.checked)}
          />
          <Emoji symbol="🆓" /> Gratis
        </label>
      </div>

      <SelectorDeFoto onFileSelected={handleFoto} />

      <div>
        <label>
          <Emoji symbol="🎤" />
        </label>
        <ReactMediaRecorder
          audio
          render={({ status, startRecording, stopRecording, mediaBlobUrl }) => (
            <div className="grabador-audio" style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>
              <div className="controles-grabacion" style={{ display: 'flex', gap: 8 }}>
                <button
                  type="button"
                  onClick={startRecording}
                  disabled={status === 'recording'}
                  className="btn-grabar"
                >
                  🎤 Grabar
                </button>
                <button
                  type="button"
                  onClick={() => {
                    stopRecording()
                    setTimeout(() => {
                      if (mediaBlobUrl) handleAudioStop(mediaBlobUrl)
                    }, 400)
                  }}
                  disabled={status !== 'recording'}
                  className="btn-detener"
                >
                  ⏹️ Detener
                </button>
              </div>
              {audioUrl && (
                <audio
                  controls
                  src={audioUrl}
                  className="reproductor-audio"
                  style={{ marginTop: 8, width: '100%' }}
                />
              )}
              <span className="ayuda-audio" style={{ fontSize: 13, color: '#888' }}>
                Puedes grabar una observación de voz como evidencia.
              </span>
            </div>
          )}
        />
      </div>

      <button
        type="submit"
        disabled={loading}
        className="btn-registrar"
      >
        {loading ? 'Registrando...' : <><Emoji symbol="🚦" /> Registrar Ingreso</>}
      </button>

      {mensaje && <div className="info-message">{mensaje}</div>}
    </form>
  )
}


----- C:\parking-app\src\components\ResumenRecaudo.jsx -----

// src/components/ResumenRecaudo.jsx
import React, { useState, useEffect } from 'react'
import { supabase } from '../supabaseClient'
import Loader from './Loader'
import Emoji from './Emoji'

export default function ResumenRecaudo({ refreshKey }) {
  const [registros, setRegistros] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [montoRecaudar, setMontoRecaudar] = useState('')
  const [procesando, setProcesando] = useState(false)
  const [filtroPropiedad, setFiltroPropiedad] = useState('')
  const [filtroUnidad, setFiltroUnidad] = useState('')
  const [filtroCopropietario, setFiltroCopropietario] = useState('')
  const [editModal, setEditModal] = useState({ open: false, registro: null })
  const [editData, setEditData] = useState({})
  const [propiedades, setPropiedades] = useState([])
  const [unidades, setUnidades] = useState([])

  useEffect(() => {
    const fetchCopropietarios = async () => {
      const { data, error } = await supabase
        .from('copropietarios')
        .select('propiedad, unidad_asignada')
      if (!error) {
        const props = [...new Set(data.map(d => d.propiedad))].sort()
        setPropiedades(props)
        setUnidades(data)
      }
    }
    fetchCopropietarios()
  }, [])

  const unidadesFiltradas = filtroPropiedad
    ? [...new Set(unidades.filter(u => u.propiedad === filtroPropiedad).map(u => u.unidad_asignada))]
    : []

  const fetchData = async () => {
    setLoading(true)
    try {
      const { data, error } = await supabase
        .from('registros_parqueadero')
        .select(`
          *,
          copropietarios:dependencia_id(nombre, propiedad, unidad_asignada)
        `)
        .order('fecha_hora_ingreso', { ascending: false })

      if (error) throw error
      setRegistros(data)
    } catch (error) {
      setError(error.message)
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => { fetchData() }, [refreshKey])

  const handleRecaudoAutomatico = async () => {
    if (!filtroPropiedad || !filtroUnidad) {
      alert('Debe seleccionar propiedad y unidad asignada')
      return
    }

    const montoObjetivo = parseFloat(montoRecaudar)
    if (isNaN(montoObjetivo) || montoObjetivo <= 0) {
      alert('Ingrese un monto válido')
      return
    }

    setProcesando(true)
    try {
      const { data: registrosParaRecaudar, error } = await supabase
        .from('registros_parqueadero')
        .select(`
          *,
          copropietarios:dependencia_id(propiedad, unidad_asignada)
        `)
        .eq('copropietarios.propiedad', filtroPropiedad)
        .eq('copropietarios.unidad_asignada', filtroUnidad)
        .eq('recaudado', false)
        .eq('gratis', false)
        .order('fecha_hora_ingreso', { ascending: true })

      if (error) throw error
      if (!registrosParaRecaudar?.length) {
        alert('No hay registros pendientes para esta propiedad/unidad')
        return
      }

      let montoAcumulado = 0
      const registrosAMarcar = registrosParaRecaudar
        .filter(reg => {
          if (montoAcumulado >= montoObjetivo) return false
          montoAcumulado += Number(reg.monto)
          return true
        })
        .map(reg => reg.id)

      const { error: updateError } = await supabase
        .from('registros_parqueadero')
        .update({
          recaudado: true,
          fecha_recaudo: new Date().toISOString().slice(0, 10)
        })
        .in('id', registrosAMarcar)

      if (updateError) throw updateError

      alert(`Recaudado $${montoAcumulado.toFixed(2)} en ${registrosAMarcar.length} registros`)
      fetchData()
      setMontoRecaudar('')
    } catch (error) {
      alert('Error: ' + error.message)
    } finally {
      setProcesando(false)
    }
  }

  const registrosFiltrados = registros.filter(reg => {
    const coincidePropiedad = !filtroPropiedad || (reg.copropietarios?.propiedad || '') === filtroPropiedad
    const coincideUnidad = !filtroUnidad || (reg.copropietarios?.unidad_asignada || '') === filtroUnidad
    const coincideCopropietario = !filtroCopropietario || (reg.copropietarios?.nombre || '').toLowerCase().includes(filtroCopropietario.toLowerCase())
    return coincidePropiedad && coincideUnidad && coincideCopropietario
  })

  const resumen = registrosFiltrados.reduce((acc, reg) => {
    if (reg.gratis) acc.gratis++
    else if (reg.recaudado) acc.recaudado += Number(reg.monto)
    else acc.pendiente += Number(reg.monto)
    return acc
  }, { recaudado: 0, pendiente: 0, gratis: 0 })

  const handleEditSave = async () => {
    const id = editModal.registro.id
    const monto = editData.gratis ? 0 : (editData.tipo_vehiculo === 'carro' ? 1.00 : 0.50)

    try {
      const { error } = await supabase
        .from('registros_parqueadero')
        .update({ ...editData, monto })
        .eq('id', id)

      if (error) throw error
      fetchData()
      setEditModal({ open: false, registro: null })
    } catch (error) {
      alert(error.message)
    }
  }

  const handleDelete = async (id) => {
    if (!window.confirm('¿Seguro que desea eliminar este registro?')) return
    try {
      const { error } = await supabase
        .from('registros_parqueadero')
        .delete()
        .eq('id', id)
      if (error) throw error
      fetchData()
    } catch (error) {
      alert(error.message)
    }
  }

  return (
    <div className="resumen-container">
      <h2><Emoji symbol="📊" label="Resumen" /> Resumen de Recaudación</h2>

      <div className="resumen-visual">
        <div className="resumen-item recaudado">
          <Emoji symbol="💰" /> ${resumen.recaudado.toFixed(2)}
          <span>Recaudado</span>
        </div>
        <div className="resumen-item pendiente">
          <Emoji symbol="⏳" /> ${resumen.pendiente.toFixed(2)}
          <span>Pendiente</span>
        </div>
        <div className="resumen-item gratis">
          <Emoji symbol="🆓" /> {resumen.gratis}
          <span>Gratis</span>
        </div>
      </div>

      <section className="recaudo-automatico">
        <h3><Emoji symbol="⚡" /> Recaudo Automático</h3>
        <div className="filtros-recaudo">
          <div className="filtro-group">
            <label><Emoji symbol="🏠" /> Propiedad:</label>
            <select
              value={filtroPropiedad}
              onChange={e => {
                setFiltroPropiedad(e.target.value)
                setFiltroUnidad('')
              }}
            >
              <option value="">Seleccione propiedad</option>
              {propiedades.map(prop => (
                <option key={prop} value={prop}>{prop}</option>
              ))}
            </select>
          </div>

          <div className="filtro-group">
            <label><Emoji symbol="🔢" /> Unidad:</label>
            <select
              value={filtroUnidad}
              onChange={e => setFiltroUnidad(e.target.value)}
              disabled={!filtroPropiedad}
            >
              <option value="">Seleccione unidad</option>
              {unidadesFiltradas.map(unidad => (
                <option key={unidad} value={unidad}>{unidad}</option>
              ))}
            </select>
          </div>

          <div className="filtro-group">
            <label><Emoji symbol="💵" /> Monto objetivo:</label>
            <input
              type="number"
              step="0.01"
              value={montoRecaudar}
              onChange={e => setMontoRecaudar(e.target.value)}
              placeholder="Ej: 50.00"
            />
          </div>

          <button
            className="btn-recaudo"
            onClick={handleRecaudoAutomatico}
            disabled={procesando || !filtroPropiedad || !filtroUnidad}
          >
            {procesando ? 'Procesando...' : 'Ejecutar Recaudo'}
          </button>
        </div>
      </section>

      <div className="filtros-avanzados">
        <div className="filtro-group">
          <label><Emoji symbol="👥" /> Copropietario:</label>
          <input
            type="text"
            value={filtroCopropietario}
            onChange={e => setFiltroCopropietario(e.target.value)}
            placeholder="Filtrar por nombre"
          />
        </div>
      </div>

      <div className="detalle-recaudo">
        <h3><Emoji symbol="📋" /> Detalle de Registros</h3>
        <div className="tabla-detalle">
          <table>
            <thead>
              <tr>
                <th><Emoji symbol="🚗" /> Placa</th>
                <th><Emoji symbol="🛵" /> Tipo</th>
                <th><Emoji symbol="💵" /> Monto</th>
                <th><Emoji symbol="👥" /> Copropietario</th>
                <th><Emoji symbol="📅" /> Fecha Recaudo</th>
                <th><Emoji symbol="⚙️" /> Acciones</th>
              </tr>
            </thead>
            <tbody>
              {registrosFiltrados.map(reg => (
                <tr key={reg.id} className={reg.recaudado ? 'recaudado' : 'pendiente'}>
                  <td>{reg.placa_vehiculo}</td>
                  <td>{reg.tipo_vehiculo}</td>
                  <td>${reg.monto.toFixed(2)}</td>
                  <td>{reg.copropietarios?.nombre || '-'}</td>
                  <td>{reg.fecha_recaudo || '-'}</td>
                  <td>
                    <button onClick={() => {
                      setEditModal({ open: true, registro: reg })
                      setEditData({
                        placa_vehiculo: reg.placa_vehiculo,
                        tipo_vehiculo: reg.tipo_vehiculo,
                        fecha_hora_ingreso: reg.fecha_hora_ingreso?.slice(0, 10) || '',
                        gratis: reg.gratis
                      })
                    }}>
                      <Emoji symbol="✏️" />
                    </button>
                    <button onClick={() => handleDelete(reg.id)}>
                      <Emoji symbol="🗑️" />
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {editModal.open && (
        <div className="modal-edicion">
          <h3>Editar Registro</h3>
          <form onSubmit={e => { e.preventDefault(); handleEditSave() }}>
            <label>
              Placa:
              <input
                value={editData.placa_vehiculo}
                onChange={e => setEditData({ ...editData, placa_vehiculo: e.target.value })}
                required
              />
            </label>

            <label>
              Tipo:
              <select
                value={editData.tipo_vehiculo}
                onChange={e => setEditData({ ...editData, tipo_vehiculo: e.target.value })}
              >
                <option value="carro">Carro</option>
                <option value="moto">Moto</option>
              </select>
            </label>

            <label>
              Fecha ingreso:
              <input
                type="date"
                value={editData.fecha_hora_ingreso}
                onChange={e => setEditData({ ...editData, fecha_hora_ingreso: e.target.value })}
              />
            </label>

            <label className="checkbox">
              <input
                type="checkbox"
                checked={editData.gratis}
                onChange={e => setEditData({ ...editData, gratis: e.target.checked })}
              />
              <Emoji symbol="🆓" /> Gratis
            </label>

            <div className="acciones-modal">
              <button type="submit">Guardar</button>
              <button type="button" onClick={() => setEditModal({ open: false, registro: null })}>
                Cancelar
              </button>
            </div>
          </form>
        </div>
      )}

      {loading && <Loader text="Cargando datos..." />}
      {error && <div className="error-message">{error}</div>}
    </div>
  )
}


----- C:\parking-app\src\components\ResumenRegistros.jsx -----

// src/components/ResumenRegistros.jsx
import React from 'react'
import Emoji from './Emoji'


export default function ResumenRegistros({ registros = [] }) {
  const resumen = registros.reduce((acc, reg) => {
    if (reg.gratis) acc.gratis++
    else if (reg.recaudado) acc.recaudado += Number(reg.monto)
    else acc.pendiente += Number(reg.monto)
    acc.total += Number(reg.monto)
    acc.cantidad++
    return acc
  }, { recaudado: 0, pendiente: 0, gratis: 0, total: 0, cantidad: 0 })

  return (
    <div className="resumen-visual resumen-2lineas" style={{ marginBottom: 24 }}>
      <div className="resumen-row">
        <div className="resumen-item recaudado" title="Monto recaudado">
          <Emoji symbol="💰" label="Recaudado" /> ${resumen.recaudado.toFixed(2)}
          <span>Recaudado</span>
        </div>
        <div className="resumen-item pendiente" title="Monto pendiente">
          <Emoji symbol="⏳" label="Pendiente" /> ${resumen.pendiente.toFixed(2)}
          <span>Pendiente</span>
        </div>
        <div className="resumen-item gratis" title="Cantidad de registros gratis">
          <Emoji symbol="🆓" label="Gratis" /> {resumen.gratis}
          <span>Gratis</span>
        </div>
      </div>
      <div className="resumen-row">
        <div className="resumen-item" title="Cantidad de registros">
          <Emoji symbol="📋" label="Registros" /> {resumen.cantidad}
          <span>Registros</span>
        </div>
        <div className="resumen-item" title="Monto total">
          <Emoji symbol="🧾" label="Total" /> ${resumen.total.toFixed(2)}
          <span>Total</span>
        </div>
      </div>
    </div>
  )
}


----- C:\parking-app\src\components\SelectorDeFoto.jsx -----

// src/components/SelectorDeFoto.jsx
import React, { useState } from 'react'
import CapturaCamara from './CapturaCamara'

export default function SelectorDeFoto({ onFileSelected }) {
  const [modo, setModo] = useState('camara') // 'camara' o 'galeria'

  const handleFile = file => {
    onFileSelected(file)
  }

  return (
    <div className="selector-foto">
      <div className="modos-seleccion">
        <button
          type="button"
          onClick={() => setModo('camara')}
          className={modo === 'camara' ? 'active' : ''}
        >
          📸 Usar Cámara
        </button>
        <button
          type="button"
          onClick={() => setModo('galeria')}
          className={modo === 'galeria' ? 'active' : ''}
        >
          🖼️ Subir Archivo
        </button>
      </div>

      {modo === 'camara' ? (
        <CapturaCamara onCaptura={handleFile} />
      ) : (
        <input
          type="file"
          accept="image/*"
          onChange={e => {
            if (e.target.files && e.target.files[0]) {
              handleFile(e.target.files[0])
            }
          }}
        />
      )}
    </div>
  )
}


----- C:\parking-app\src\hooks\useOnlineStatus.jsx -----

// src/hooks/useOnlineStatus.jsx
import { useState, useEffect } from 'react'

export default function useOnlineStatus() {
  const [isOnline, setIsOnline] = useState(navigator.onLine)
  useEffect(() => {
    const update = () => setIsOnline(navigator.onLine)
    window.addEventListener('online', update)
    window.addEventListener('offline', update)
    return () => {
      window.removeEventListener('online', update)
      window.removeEventListener('offline', update)
    }
  }, [])
  return isOnline
}


----- C:\parking-app\src\styles\global.css -----

/* global.css - Integro, moderno, responsivo, accesible, claro/oscuro y disruptivo */

/* Variables globales para tema claro y oscuro */
:root {
  --background: #f8fafc;
  --surface: #fff;
  --text: #18181b;
  --text-light: #fff;
  --text-muted: #6b7280;
  --primary: #6366f1;
  --primary-light: #e0e7ff;
  --secondary: #38bdf8;
  --accent: #ff6f91;
  --success: #10b981;
  --warning: #f59e42;
  --danger: #ef4444;
  --radius-lg: 20px;
  --radius-md: 12px;
  --radius-sm: 6px;
  --shadow-lg: 0 8px 32px #6366f133;
  --shadow-md: 0 2px 12px #6366f144;
  --transition: 0.22s cubic-bezier(.4,0,.2,1);
  --font-main: 'Inter', 'Segoe UI', Arial, sans-serif;
  --focus: #ff6f91;
}

[data-theme="dark"] {
  --background: #18181b;
  --surface: #23272f;
  --text: #f3f4f6;
  --text-muted: #a1a1aa;
  --primary: #818cf8;
  --primary-light: #23272f;
  --secondary: #38bdf8;
  --accent: #f472b6;
  --shadow-lg: 0 8px 32px #818cf833;
  --shadow-md: 0 2px 12px #818cf844;
}

/* Base */
html, body {
  margin: 0;
  padding: 0;
  font-family: var(--font-main);
  background: var(--background);
  color: var(--text);
  min-height: 100vh;
  scroll-behavior: smooth;
  transition: background var(--transition), color var(--transition);
  text-align: center;
}

#root, .app-root {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  background: var(--background);
}

a {
  color: var(--primary);
  text-decoration: none;
  transition: color var(--transition);
}
a:hover, a:focus {
  color: var(--accent);
  text-decoration: underline;
}

h1, h2, h3, h4 {
  font-weight: 800;
  letter-spacing: -1px;
  margin-top: 0;
  text-align: center;
}

/* Botones y formularios */
button, input, select, textarea {
  font-family: inherit;
  font-size: 1rem;
  border-radius: var(--radius-md);
  border: 1.5px solid #e5e7eb;
  padding: 10px 14px;
  outline: none;
  transition: border-color var(--transition), background var(--transition);
  margin: 0.25rem 0;
}

button {
  cursor: pointer;
  background: var(--primary);
  color: var(--text-light);
  border: none;
  font-weight: 600;
  box-shadow: var(--shadow-md);
  margin: 0.5rem 0.25rem;
  min-width: 120px;
  min-height: 44px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}
button:hover, .btn-disruptivo:hover, .menu-button:hover {
  background: linear-gradient(90deg, var(--secondary) 60%, var(--accent) 100%);
}
.btn-disruptivo {
  background: linear-gradient(90deg, var(--primary) 60%, var(--secondary) 100%);
  color: #fff;
  font-weight: 700;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  padding: 14px 0;
  font-size: 1.1rem;
  width: 100%;
  max-width: 340px;
  margin: 1rem auto;
}

input:focus, select:focus, textarea:focus {
  border-color: var(--primary);
  background: #f0f9ff;
}

input[type="checkbox"], input[type="radio"] {
  width: 1.1em;
  height: 1.1em;
  accent-color: var(--primary);
  margin-right: 7px;
}

/* Scrollbar */
::-webkit-scrollbar {
  width: 10px;
  background: #e0e7ef;
}
::-webkit-scrollbar-thumb {
  background: var(--primary);
  border-radius: 8px;
}

/* Layout y contenedores */
.header-gradient {
  background: linear-gradient(90deg, var(--primary) 0%, var(--secondary) 100%);
  color: #fff;
  padding: 2.5rem 0 1.2rem 0;
  border-bottom-left-radius: var(--radius-lg);
  border-bottom-right-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  width: 100vw;
  text-align: center;
}

.topbar-center {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 16px;
  margin-bottom: 1.2rem;
  flex-wrap: wrap;
}

.header-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.2rem;
  width: 100%;
}

.conjunto-title {
  font-size: 2.1rem;
  font-weight: 900;
  color: #fff;
  text-shadow: 0 2px 8px #0003;
  justify-content: center;
}

.subtitle {
  font-size: 1.15rem;
  color: #e0e7ef;
  font-weight: 600;
}

.footer {
  margin-top: 3rem;
  text-align: center;
  background: linear-gradient(90deg, var(--primary) 0%, var(--secondary) 100%);
  color: #fff;
  border-top-left-radius: var(--radius-lg);
  border-top-right-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  font-size: 1.08rem;
  padding: 1.2rem 0;
  width: 100vw;
}

.main-content {
  width: 100vw;
  max-width: 700px;
  margin: 0 auto;
  padding: 2.2rem 1rem 1.2rem 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.menu-container {
  margin: 1.5rem 0 1.5rem 0;
  display: flex;
  justify-content: center;
  width: 100vw;
}

/* Consultas y filtros */
.consultas-container {
  background: var(--surface);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  padding: 2.2rem 1.5rem;
  margin-bottom: 2rem;
  max-width: 900px;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.filtros-form {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 1.2rem;
}
.filtros-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 1.2rem;
  justify-content: center;
  margin-bottom: 1rem;
  width: 100%;
}
.filtro-item {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  min-width: 140px;
  font-size: 1em;
}
.acciones-filtros {
  display: flex;
  gap: 1rem;
  justify-content: center;
  margin-top: 1rem;
}

/* Tablas y resúmenes centrados */
.resultados-table-container {
  width: 100%;
  margin: 0 auto;
  overflow-x: auto;
}
.resultados-table, .registros-table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 1.2rem;
  background: var(--surface);
  border-radius: var(--radius-md);
  overflow: hidden;
  box-shadow: var(--shadow-md);
  margin-left: auto;
  margin-right: auto;
}
.resultados-table th, .registros-table th {
  background: var(--primary);
  color: #fff;
  font-weight: 800;
  padding: 10px 6px;
  text-align: center;
}
.resultados-table td, .registros-table td {
  padding: 10px 6px;
  text-align: center;
  border-bottom: 1px solid #e5e7eb;
  font-size: 1.02em;
}
.resultados-table tr:last-child td, .registros-table tr:last-child td {
  border-bottom: none;
}
.resultados-table tr:hover, .registros-table tr:hover {
  background: #f1f5f9;
}
.thumbnail {
  width: 38px;
  height: 38px;
  object-fit: cover;
  border-radius: var(--radius-sm);
  box-shadow: 0 2px 6px #6366f133;
}
.sin-resultados {
  color: var(--text-muted);
  font-size: 1.1em;
  text-align: center;
  padding: 1.2em 0;
}

/* Loader */
.loader {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 120px;
  width: 100%;
}
@keyframes spin {
  0% { transform: rotate(0deg);}
  100% { transform: rotate(360deg);}
}
.loader-spinner {
  width: 48px;
  height: 48px;
  border: 6px solid #e0e0e0;
  border-top: 6px solid var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
}

/* Mensajes y feedback */
.info-message, .error-message {
  margin-top: 1rem;
  padding: 12px 18px;
  border-radius: var(--radius-md);
  font-size: 1.06em;
  font-weight: 600;
  text-align: center;
}
.info-message {
  background: #e0ffe8;
  color: var(--success);
  border: 1.5px solid #22c55e;
}
.error-message {
  background: #fffbe6;
  color: var(--danger);
  border: 1.5px solid #ffe58f;
}

/* Modales centrados */
.modal-backdrop {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: #18181b99;
  z-index: 1001;
  display: flex;
  align-items: center;
  justify-content: center;
}
.modal-content {
  background: var(--surface);
  padding: 2rem 1.5rem;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  min-width: 320px;
  max-width: 90vw;
  margin: 0 auto;
}
.modal-form label {
  display: block;
  margin-bottom: 12px;
  font-weight: 600;
  text-align: left;
}
.modal-form input, .modal-form select, .modal-form textarea {
  width: 100%;
  margin-top: 5px;
  margin-bottom: 15px;
  font-size: 1em;
}

.save-btn, .edit-btn {
  background: var(--success);
  color: #fff;
  border: none;
  border-radius: var(--radius-md);
  padding: 8px 18px;
  margin-right: 10px;
  font-weight: 700;
  transition: background var(--transition);
}
.save-btn:hover, .edit-btn:hover {
  background: #059669;
}
.delete-btn {
  background: var(--danger);
  color: #fff;
  border: none;
  border-radius: var(--radius-md);
  padding: 8px 18px;
  font-weight: 700;
  transition: background var(--transition);
}
.delete-btn:hover {
  background: #991b1b;
}
.cancel-btn {
  background: #e0e7ef;
  color: #333;
  border: none;
  border-radius: var(--radius-md);
  padding: 8px 18px;
  font-weight: 600;
  margin-left: 10px;
  transition: background var(--transition);
}
.cancel-btn:hover {
  background: #cbd5e1;
}

/* Responsive */
@media (max-width: 900px) {
  .main-content, .form-parqueo, .header-content, .acerca-de-container,
  .gestion-usuarios-container, .gestion-copropietarios-container,
  .descargo-gestion-container, .consultas-container, .lista-registros-container {
    max-width: 98vw;
    padding: 1.1rem 2vw;
  }
  .header-content {
    margin-left: 0;
  }
  .footer {
    font-size: 0.95rem;
    padding: 0.8rem 0;
  }
  .resultados-table, .registros-table {
    font-size: 0.98em;
  }
}

@media (max-width: 520px) {
  .main-content, .form-parqueo, .header-content, .acerca-de-container,
  .gestion-usuarios-container, .gestion-copropietarios-container,
  .descargo-gestion-container, .consultas-container, .lista-registros-container {
    padding: 0.6rem 1vw;
  }
  .header-content {
    gap: 0.7rem;
  }
  .conjunto-title {
    font-size: 1.3rem;
  }
  .footer {
    font-size: 0.85rem;
    padding: 0.6rem 0;
  }
}

/* Accesibilidad */
:focus-visible {
  outline: 2px solid var(--focus);
  outline-offset: 2px;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}
